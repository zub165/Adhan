(()=>{"use strict";async function t(){return new Promise(((t,e)=>{const a=document.createElement("script");a.src="/js/modules/adhan.js",a.type="text/javascript",a.async=!0,a.onload=()=>{void 0!==window.Adhan?(console.log("✅ Local Adhan.js loaded successfully"),t()):(console.error("❌ Local Adhan.js did not initialize properly"),e(new Error("Local Adhan.js did not initialize properly")))},a.onerror=()=>{console.error("❌ Failed to load local Adhan.js"),e(new Error("Failed to load local Adhan.js"))},document.body.appendChild(a)}))}const e=class{constructor(){this.coordinates=null,this.prayerTimes=null,this.calculationMethod="MuslimWorldLeague",this.madhab="Shafi",this.highLatitudeRule="MiddleOfTheNight",this.lastCalculation=null,this.notificationTimeout=null,this.adhanPlayer=null,this.angles={fajr:-18,sunrise:-.833,dhuhr:0,maghrib:-.833,isha:-18},this.dstAdjustment=this.getDSTAdjustment(),document.addEventListener("DOMContentLoaded",(()=>{const t=document.querySelector('select[name="calculationMethod"]');t&&t.addEventListener("change",(t=>{this.calculationMethod=t.target.value,localStorage.setItem("calculationMethod",this.calculationMethod),this.recalculatePrayerTimes()})),document.querySelectorAll('input[name="madhab"]').forEach((t=>{t.addEventListener("change",(t=>{this.madhab=t.target.value,localStorage.setItem("madhab",this.madhab),this.recalculatePrayerTimes()}))}))}))}setAdhanPlayer(t){this.adhanPlayer=t}async initialize(){try{"undefined"==typeof Adhan&&await new Promise((t=>{const e=setInterval((()=>{"undefined"!=typeof Adhan&&(clearInterval(e),t())}),100)})),this.loadSettings(),this.coordinates=this.coordinates||new Adhan.Coordinates(21.4225,39.8262);const t=this.getCalculationParameters();return await this.calculatePrayerTimes(t),console.log("Prayer calculation initialized successfully"),!0}catch(t){return console.error("Error initializing prayer calculation:",t),!1}}loadSettings(){const t=localStorage.getItem("calculationMethod");t&&Adhan.CalculationMethod[t]&&(this.calculationMethod=t);const e=localStorage.getItem("madhab");e&&Adhan.Madhab[e]&&(this.madhab=e);const a=parseFloat(localStorage.getItem("latitude")),i=parseFloat(localStorage.getItem("longitude"));isNaN(a)||isNaN(i)||(this.coordinates=new Adhan.Coordinates(a,i))}getCalculationParameters(){let t=Adhan.CalculationMethod[this.calculationMethod]();return t.madhab=Adhan.Madhab[this.madhab],t.highLatitudeRule=Adhan.HighLatitudeRule[this.highLatitudeRule],t}async calculatePrayerTimes(t){try{const e=new Date,a=new Adhan.PrayerTimes(this.coordinates,e,t);this.prayerTimes={fajr:a.fajr,sunrise:a.sunrise,dhuhr:a.dhuhr,asr:a.asr,maghrib:a.maghrib,isha:a.isha};const i=new Date(this.prayerTimes.fajr),o=new Adhan.PrayerTimes(this.coordinates,new Date(e.getTime()-864e5),t).maghrib,n=this.prayerTimes.fajr-o,s=new Date(o.getTime()+2*n/3),r=new Date(i.getTime()-6e5),l=new Date(this.prayerTimes.sunrise.getTime()+12e5);return this.prayerTimes.tahajjud=s,this.prayerTimes.suhoor=r,this.prayerTimes.ishraq=l,!0}catch(t){return console.error("Error calculating prayer times:",t),!1}}getPrayerTimes(){return this.prayerTimes}async updateCoordinates(t,e){return this.coordinates=new Adhan.Coordinates(t,e),localStorage.setItem("latitude",t.toString()),localStorage.setItem("longitude",e.toString()),await this.calculatePrayerTimes(this.getCalculationParameters())}async updateCalculationMethod(t){return!!Adhan.CalculationMethod[t]&&(this.calculationMethod=t,localStorage.setItem("calculationMethod",t),await this.calculatePrayerTimes(this.getCalculationParameters()))}async updateMadhab(t){return!!Adhan.Madhab[t]&&(this.madhab=t,localStorage.setItem("madhab",t),await this.calculatePrayerTimes(this.getCalculationParameters()))}toRadians(t){return t*(Math.PI/180)}toDegrees(t){return t*(180/Math.PI)}getSunDeclination(t){const e=t.getDate(),a=t.getMonth()+1,i=t.getFullYear(),o=367*i-Math.floor(7*(i+Math.floor((a+9)/12))/4)+Math.floor(275*a/9)+e-730531.5,n=357.52911+.9856003*o,s=280.46646+.9856474*o+1.915*Math.sin(this.toRadians(n))+.02*Math.sin(this.toRadians(2*n));return 23.439-4e-7*o*Math.sin(this.toRadians(s))}getEquationOfTime(t){const e=t.getDate(),a=t.getMonth()+1,i=t.getFullYear(),o=367*i-Math.floor(7*(i+Math.floor((a+9)/12))/4)+Math.floor(275*a/9)+e-730531.5,n=280.46646+.9856474*o,s=357.52911+.9856003*o,r=(Math.sin(this.toRadians(s)),Math.cos(this.toRadians(s)),n+1.915*Math.sin(this.toRadians(s))+.02*Math.sin(this.toRadians(2*s)));return Math.cos(this.toRadians(s)),Math.cos(this.toRadians(2*s)),4*(n-(r-2.466*Math.sin(this.toRadians(2*r))+.053*Math.sin(this.toRadians(4*r))))}calculatePrayerTime(t,e,a,i){try{const o=this.toRadians(e),n=this.toRadians(this.getSunDeclination(t));let s=i;i!==this.angles.sunrise&&i!==this.angles.maghrib||(s-=.833+.0347*Math.sqrt(this.coordinates.elevation||0));const r=this.toRadians(s);let l=(Math.sin(r)-Math.sin(o)*Math.sin(n))/(Math.cos(o)*Math.cos(n));if(Math.abs(l)>1){if(!(i<0))return console.warn(`Prayer time calculation not valid for this latitude (${e}) and date`),null;l=i>-18?-1:1}const c=this.toDegrees(Math.acos(l));let d=12+(i<0?-c:c)/15-a/15-this.getEquationOfTime(t)/60+-t.getTimezoneOffset()/60;for(;d<0;)d+=24;for(;d>=24;)d-=24;const h=Math.floor(d),u=Math.floor(60*(d-h)),m=Math.floor(60*(60*(d-h)-u)),g=new Date(t);return g.setHours(h,u,m,0),h<6&&t.getHours()>18&&g.setDate(g.getDate()+1),g}catch(t){return console.error("Error in calculatePrayerTime:",t),null}}getDSTAdjustment(){try{const t=new Date((new Date).getFullYear(),0,1).getTimezoneOffset(),e=new Date((new Date).getFullYear(),6,1).getTimezoneOffset();return Math.max(t,e)!==(new Date).getTimezoneOffset()?1:0}catch(t){return console.warn("Error determining DST:",t),0}}calculateAsrTime(t,e,a){try{const i=this.toRadians(e),o=this.toRadians(this.getSunDeclination(t)),n=(this.getEquationOfTime(t),t.getTimezoneOffset(),Math.asin(Math.sin(i)*Math.sin(o)+Math.cos(i)*Math.cos(o))),s="hanafi"===this.madhab.toLowerCase()?2:1,r=Math.atan(1/(s+Math.tan(n))),l=this.toDegrees(Math.PI/2-r);return this.calculatePrayerTime(t,e,a,l)}catch(t){return console.error("Error calculating Asr time:",t),null}}async recalculatePrayerTimes(){this.coordinates&&await this.calculatePrayerTimes(this.getCalculationParameters())}async updatePrayerTimesUI(t){if(!t)return void console.error("No prayer times to update UI");const e={fajr:"fajr",dhuhr:"dhuhr",asr:"asr",maghrib:"maghrib",isha:"isha"},a=this.calculateAdditionalTimes(t);console.log("All prayer times:",{standard:Object.fromEntries(Object.entries(t).map((([t,e])=>[t,this.formatTime(e)]))),additional:Object.fromEntries(Object.entries(a).map((([t,e])=>[t,this.formatTime(e)])))});for(const[a,i]of Object.entries(e)){const e=t[a];if(e){const t=this.formatTime(e),a=document.querySelector(`.prayer-card[data-prayer="${i}"] .prayer-time`);a?(a.textContent=t,console.log(`Updated ${i} time to ${t}`)):console.warn(`Element for ${i} not found`)}else console.warn(`No time available for ${a}`)}const i={tahajjud:"tahajjud",suhoor:"suhoor",ishraq:"ishraq"};for(const[t,e]of Object.entries(i)){const i=a[t];if(i){const t=this.formatTime(i),a=document.querySelector(`.prayer-card[data-prayer="${e}"] .prayer-time`);a?(a.textContent=t,console.log(`Updated ${e} time to ${t}`)):console.warn(`Element for ${e} not found`)}else console.warn(`No additional time available for ${t}`)}this.updateNextPrayer(t,a),this.scheduleNextPrayerNotification(t,a)}calculateAdditionalTimes(t){if(!t||!t.fajr||!t.maghrib)return console.warn("Missing required prayer times for additional calculations"),this.getDefaultAdditionalTimes();const e={};try{new Date;const a=new Date(t.fajr),i=new Date(t.maghrib);if(isNaN(a.getTime())||isNaN(i.getTime()))throw new Error("Invalid prayer time dates");let o=new Date(i),n=new Date(a);a.getHours()<i.getHours()&&(n=new Date(a),n.setDate(n.getDate()+1));const s=n-o;if(s<=0)throw new Error("Invalid night duration calculation");const r=new Date(o.getTime()+2*s/3);e.tahajjud=r;const l=new Date(a);if(l.setMinutes(l.getMinutes()-10),e.suhoor=l,t.sunrise){const a=new Date(t.sunrise);if(!isNaN(a.getTime())){const t=new Date(a);t.setMinutes(t.getMinutes()+20),e.ishraq=t}}return console.log("Additional prayer times calculated:",{tahajjud:this.formatTime(e.tahajjud),suhoor:this.formatTime(e.suhoor),ishraq:e.ishraq?this.formatTime(e.ishraq):"N/A"}),e}catch(t){return console.error("Error calculating additional prayer times:",t),this.getDefaultAdditionalTimes()}}getDefaultAdditionalTimes(){console.log("Using default additional prayer times");const t={},e=new Date,a=new Date(e);a.setHours(3,0,0,0),t.tahajjud=a;const i=new Date(e);i.setHours(4,30,0,0),t.suhoor=i;const o=new Date(e);return o.setHours(7,0,0,0),t.ishraq=o,t}formatTime(t){if(!t||!(t instanceof Date)||isNaN(t.getTime()))return console.error("Invalid date for formatting:",t),"--:--";try{return t.toLocaleTimeString("en-US",{hour:"2-digit",minute:"2-digit",hour12:!0})}catch(e){console.error("Error formatting time:",e);const a=t.getHours(),i=t.getMinutes();return`${a%12||12}:${i<10?`0${i}`:i} ${a>=12?"PM":"AM"}`}}updateNextPrayer(t,e){const a=new Date,i={...t,...e},o=["tahajjud","suhoor","fajr","sunrise","ishraq","dhuhr","asr","maghrib","isha"];let n=null,s=null;for(const t of o){const e=i[t];if(e&&e>a){n=t,s=e;break}}if(!n){n="tahajjud";const t=new Date(e.tahajjud);t.setDate(t.getDate()+1),s=t}document.querySelectorAll(".prayer-card").forEach((t=>{t.classList.remove("active","next-prayer")}));const r=document.querySelector(`.prayer-card[data-prayer="${n}"]`);if(r){r.classList.add("active","next-prayer");const t=r.querySelector(".countdown");t&&(this.updateCountdown(t,s),this.countdownInterval&&clearInterval(this.countdownInterval),this.countdownInterval=setInterval((()=>{this.updateCountdown(t,s)}),6e4))}}scheduleNextPrayerNotification(t,e){this.notificationTimeout&&clearTimeout(this.notificationTimeout);const a=new Date,i={...t,...e},o=["tahajjud","suhoor","fajr","sunrise","ishraq","dhuhr","asr","maghrib","isha"];let n=null,s=null;for(const t of o){const e=i[t];if(e&&e>a){n=t,s=e;break}}if(!n){n="tahajjud";const t=new Date(e.tahajjud);t.setDate(t.getDate()+1),s=t}const r=s.getTime()-a.getTime();this.notificationTimeout=setTimeout((()=>{this.showPrayerNotification(n),this.scheduleNextPrayerNotification(t,e)}),r),console.log(`Next prayer: ${n} at ${this.formatTime(s)} (in ${Math.round(r/6e4)} minutes)`)}async showPrayerNotification(t){if("sunrise"!==t)try{const e={tahajjud:"Tahajjud",suhoor:"Suhoor Ends",fajr:"Fajr",ishraq:"Ishraq",dhuhr:"Dhuhr",asr:"Asr",maghrib:"Maghrib",isha:"Isha"}[t]||t.charAt(0).toUpperCase()+t.slice(1);"granted"===Notification.permission&&(new Notification(`Time for ${e}`,{body:"suhoor"===t?"Suhoor time is ending soon":`It's time for ${e} prayer`,icon:"/icons/mosque.png",silent:!0}),this.adhanPlayer&&await this.adhanPlayer.playAzan(t))}catch(t){console.error("Error showing notification:",t)}}showError(t){console.error(t);const e=document.createElement("div");e.className="error",e.textContent=t,document.body.appendChild(e),setTimeout((()=>e.remove()),5e3)}updateCountdown(t,e){if(!t||!e)return;const a=e-new Date;if(a<=0)return void(t.textContent="Now");const i=Math.floor(a/36e5),o=Math.floor(a%36e5/6e4);let n="";i>0&&(n+=`${i} hour${i>1?"s":""} `),n+=`${o} minute${1!==o?"s":""}`,t.textContent=`In ${n}`}},a=class{constructor(){this.availableQaris=["Local","abdul-basit","al-hussary","al-minshawi","al-ghamdi","mishary-rashid","madinah","makkah","islamcan"],this.currentQari=localStorage.getItem("defaultQari")||"Local",this.baseUrl=window.location.hostname.includes("github.io")?"/Adhan":"",this.audio=null,this.isPlaying=!1,this.isLoading=!1,"loading"===document.readyState?document.addEventListener("DOMContentLoaded",(()=>this.initializeQariSelectors())):this.initializeQariSelectors()}initializeQariSelectors(){["tahajjud","suhoor","fajr","ishraq","dhuhr","asr","maghrib","isha"].forEach((t=>{const e=document.querySelector(`.prayer-card[data-prayer="${t}"]`);if(e){let a=e.querySelector(".qari-select-container");if(!a){a=document.createElement("div"),a.className="qari-select-container";const i=document.createElement("label");i.textContent="Select Qari: ",i.htmlFor=`${t}QariSelect`,a.appendChild(i);const o=document.createElement("select");o.id=`${t}QariSelect`,o.className="qari-select",a.appendChild(o);const n=e.querySelector(".adhan-controls");n?n.parentNode.insertBefore(a,n):e.appendChild(a)}let i=e.querySelector(".browse-button");i||(i=document.createElement("button"),i.textContent="Browse Files",i.className="browse-button",i.onclick=()=>this.showFileSelector(t),a.appendChild(i));let o=document.getElementById(`${t}Modal`);o||(o=document.createElement("div"),o.id=`${t}Modal`,o.className="file-selector-modal",o.style.display="none",o.innerHTML='\n                        <div class="modal-content">\n                            <div class="modal-header">\n                                <h3>Select Adhan File</h3>\n                                <button class="close-modal">&times;</button>\n                            </div>\n                            <div class="modal-body">\n                                <div class="file-browser">\n                                    <div class="qari-list"></div>\n                                    <div class="file-list"></div>\n                                </div>\n                            </div>\n                        </div>\n                    ',document.body.appendChild(o),o.querySelector(".close-modal").onclick=()=>{o.style.display="none"},window.onclick=t=>{t.target===o&&(o.style.display="none")});const n=document.getElementById(`${t}QariSelect`);if(n){const e=n.cloneNode(!0);n.parentNode.replaceChild(e,n),e.addEventListener("change",(async e=>{const a=e.target.value;localStorage.setItem(`${t}Qari`,a),console.log(`Selected Qari for ${t}: ${a}`)}))}const s=e.querySelector(".play-adhan"),r=e.querySelector(".stop-adhan");if(s){const e=s.cloneNode(!0);s.parentNode.replaceChild(e,s),e.addEventListener("click",(async()=>{this.isPlaying||(e.disabled=!0,r&&(r.disabled=!1),await this.playAzan(t))}))}if(r){const t=r.cloneNode(!0);r.parentNode.replaceChild(t,r),t.addEventListener("click",(async()=>{this.isPlaying&&(await this.stopAzan(),s&&(s.disabled=!1),t.disabled=!0)}))}}})),this.scanAvailableQaris()}async updateFileList(t,e){const a=document.getElementById(`${t}Modal`).querySelector(".file-list");if(a)try{a.innerHTML="";const i=document.createElement("option");i.value="adhan.mp3",i.textContent="Default Adhan",a.appendChild(i);const o=await this.getStaticFileList(e);o.forEach((t=>{const e=document.createElement("option");e.value=t,e.textContent=t.replace(".mp3","").replace(/_/g," "),a.appendChild(e)}));const n=localStorage.getItem(`${t}AudioFile_${e}`);n&&o.includes(n)&&(a.value=n),a.addEventListener("change",(a=>{localStorage.setItem(`${t}AudioFile_${e}`,a.target.value)}))}catch(t){console.error("Error loading audio files:",t)}}getStaticFileList(t){const e={Local:["adhan.mp3","azan.mp3","azan2.mp3","default-azan.mp3","default-azanfajr.mp3"],"abdul-basit":["adhan_masr.mp3","adhan_makkah.mp3","adhan_fajr_masr.mp3"],"al-hussary":["adhan_cairo.mp3","adhan_fajr.mp3"],"al-minshawi":["adhan1.mp3","adhan2.mp3","adhan3.mp3","adhan4.mp3","adhan5.mp3"],madinah:["adhan_madinah1.mp3","adhan_madinah2.mp3","adhan_fajr_madinah.mp3"],makkah:["adhan_makkah1.mp3","adhan_makkah2.mp3","adhan_fajr_makkah.mp3"],islamcan:Array.from({length:21},((t,e)=>`azan${e+1}.mp3`))};return Promise.resolve(e[t]||[])}async stopAzan(){if(console.log("Stopping Adhan..."),this.audio)try{return this.isPlaying=!1,this.isLoading=!1,this.audio.pause(),this.audio.currentTime=0,this.cleanupAudio(),this.resetButtonStates(),console.log("⏹️ Audio playback stopped"),!0}catch(t){return console.error("Error stopping audio:",t),this.isPlaying=!1,this.isLoading=!1,!1}return!0}cleanupAudio(){if(this.audio)try{this.audio.oncanplaythrough=null,this.audio.onerror=null,this.audio.onended=null,this.audio.pause(),this.audio.currentTime=0,this.audio.src="",this.audio=null}catch(t){console.error("Error cleaning up audio:",t)}finally{this.isPlaying=!1,this.isLoading=!1}}formatQariName(t){const e={"islamcan-18":"IslamCan (18 Qaris)",islamcan:"IslamCan",Local:"Local Adhan",madina:"Madinah",madinah:"Madinah",makkah:"Makkah",default:"Default"};return e[t]?e[t]:t.split("-").map((t=>t.charAt(0).toUpperCase()+t.slice(1))).join(" ")}async scanAvailableQaris(){try{const t=["abdul-basit","al-ghamdi","al-hussary","al-minshawi","assabile","default","islamcan","Local","madina","madinah","makkah","mishary-rashid","muaiqly"];return this.availableQaris=t,this.updateQariSelectors(),console.log("✅ Available Qaris:",this.availableQaris),this.availableQaris}catch(t){return console.error("Error scanning Qaris:",t),this.availableQaris=["default"],this.updateQariSelectors(),this.availableQaris}}updateQariSelectors(){["tahajjud","suhoor","fajr","ishraq","dhuhr","asr","maghrib","isha"].forEach((t=>{const e=document.getElementById(`${t}QariSelect`);if(e){const a=e.value;e.innerHTML="",this.availableQaris.forEach((t=>{const a=document.createElement("option");a.value=t,a.textContent=this.formatQariName(t),e.appendChild(a)}));const i=localStorage.getItem(`${t}Qari`)||a||"default";this.availableQaris.includes(i)?e.value=i:e.value="default";const o=new Event("change");e.dispatchEvent(o)}}))}async playAzan(t){if(this.isPlaying||this.isLoading)console.log("Already playing or loading audio");else try{this.isLoading=!0;const e=document.getElementById(`${t}QariSelect`);if(!e)return console.warn(`Failed to load audio for ${t}, trying default`),this.loadDefaultAdhan(t);const a=e.value||"default",i=localStorage.getItem(`${t}AudioFile_${a}`)||"adhan.mp3";let o;if(console.log(`Playing Adhan for ${t} using qari ${a}, file: ${i}`),this.updateButtonStates(t),await this.stopAzan(),this.audio=new Audio,this.audio.oncanplaythrough=()=>{console.log("✅ Audio loaded successfully"),this.isLoading=!1,this.isPlaying=!0,this.audio.play().catch((t=>{console.error("Error playing audio:",t),this.isPlaying=!1,this.isLoading=!1,this.resetButtonStates()}))},this.audio.onerror=e=>{console.error("❌ Error loading audio:",e),this.isLoading=!1,this.isPlaying=!1,console.log("Failed to load audio for",t,"trying default"),this.loadDefaultAdhan(t)},this.audio.onended=()=>{console.log("✅ Audio playback completed"),this.isPlaying=!1,this.resetButtonStates()},"Local"===a)o=`${this.baseUrl}/adhans/Local/${i}`;else{const t=a.toLowerCase().replace(/-/g,"_");o=`${this.baseUrl}/adhans/${t}/${i}`}return console.log("Loading audio from path:",o),this.audio.src=o,!0}catch(t){return console.error("Error playing Adhan:",t),this.isPlaying=!1,this.isLoading=!1,this.cleanupAudio(),this.resetButtonStates(),!1}}async loadDefaultAdhan(t){console.log("Falling back to default Adhan...");try{const e=`${this.baseUrl}/adhans/default/adhan.mp3`;return console.log("Loading default Adhan from:",e),this.audio||(this.audio=new Audio,this.audio.oncanplaythrough=()=>{console.log("✅ Default Adhan loaded successfully"),this.isLoading=!1,this.isPlaying=!0,this.audio.play().catch((t=>{console.error("Error playing default Adhan:",t),this.isPlaying=!1,this.isLoading=!1,this.resetButtonStates()}))},this.audio.onerror=t=>{console.error("❌ Error loading default Adhan:",t),this.isLoading=!1,this.isPlaying=!1,this.resetButtonStates()},this.audio.onended=()=>{console.log("✅ Default Adhan playback completed"),this.isPlaying=!1,this.resetButtonStates()}),this.updateButtonStates(t),this.audio.src=e,!0}catch(t){return console.error("Error loading default Adhan:",t),this.isPlaying=!1,this.isLoading=!1,this.resetButtonStates(),!1}}setupAudioEventListeners(t){this.audio&&(this.audio.oncanplaythrough=null,this.audio.onerror=null,this.audio.onended=null,this.audio.oncanplaythrough=()=>{console.log("✅ Audio loaded successfully"),this.isLoading=!1,this.isPlaying=!0,this.audio.play().catch((t=>{console.error("Error playing audio:",t),this.isPlaying=!1,this.isLoading=!1,this.resetButtonStates()}))},this.audio.onerror=e=>{console.error("❌ Error loading audio:",e),this.isLoading=!1,this.isPlaying=!1,this.loadDefaultAdhan(t)},this.audio.onended=()=>{console.log("✅ Audio playback completed"),this.isPlaying=!1,this.resetButtonStates()})}playBeep(){const t=new(window.AudioContext||window.webkitAudioContext),e=t.createOscillator(),a=t.createGain();e.connect(a),a.connect(t.destination),e.type="sine",e.frequency.value=440,a.gain.value=.1,e.start(),setTimeout((()=>{e.stop(),t.close()}),500)}setDefaultQari(t){this.currentQari=t,localStorage.setItem("defaultQari",t)}async requestNotificationPermission(){try{return"granted"===await Notification.requestPermission()}catch(t){return console.error("❌ Error requesting notification permission:",t),!1}}updateButtonStates(t){const e=document.querySelector(`.prayer-card[data-prayer="${t}"]`);if(e){const t=e.querySelector(".play-adhan"),a=e.querySelector(".stop-adhan");t&&(t.disabled=!0),a&&(a.disabled=!1)}document.querySelectorAll(".prayer-card").forEach((e=>{if(e.dataset.prayer!==t){const t=e.querySelector(".play-adhan");t&&(t.disabled=!0)}}))}resetButtonStates(){document.querySelectorAll(".play-adhan").forEach((t=>{t.disabled=!1})),document.querySelectorAll(".stop-adhan").forEach((t=>{t.disabled=!0}))}async showFileSelector(t){const e=document.getElementById(`${t}Modal`);if(!e)return void console.error(`Modal for ${t} not found`);const a=e.querySelector(".qari-list"),i=e.querySelector(".file-list");a.innerHTML='<div class="loading">Loading Qaris...</div>',i.innerHTML="";try{a.innerHTML="",this.availableQaris.forEach((e=>{const o=document.createElement("button");o.className="qari-button",o.textContent=this.formatQariName(e),o.dataset.qari=e,o.onclick=async()=>{a.querySelectorAll(".qari-button").forEach((t=>{t.classList.remove("active")})),o.classList.add("active"),await this.loadQariFiles(t,e,i)},a.appendChild(o)})),e.style.display="block";const o=localStorage.getItem(`${t}Qari`)||"default",n=a.querySelector(`[data-qari="${o}"]`);n?n.click():a.firstChild&&a.firstChild.click()}catch(t){console.error("Error showing file selector:",t),a.innerHTML='<div class="error">Error loading Qaris</div>'}}async loadQariFiles(t,e,a){try{if(a.innerHTML='<div class="loading">Loading files...</div>',this.islamcanFiles||(this.islamcanFiles=Array.from({length:21},((t,e)=>`azan${e+1}.mp3`))),"islamcan"===e)return a.innerHTML="",void this.islamcanFiles.forEach((i=>{const o=this.createFileButton(t,e,i,!0);a.appendChild(o)}));if("zub165.github.io"===window.location.hostname){const i=await this.getStaticFileList(e);if(a.innerHTML="",0===i.length){const t=document.createElement("div");return t.className="no-files",t.textContent="No audio files found",void a.appendChild(t)}return void i.forEach((i=>{const o=this.createFileButton(t,e,i,!0);a.appendChild(o)}))}try{const i=await fetch(`http://localhost:3001/adhans/${e}/list`);if(!i.ok)throw new Error(`Failed to load files for ${e}`);const o=await i.json();a.innerHTML="";const n=this.createFileButton(t,e,"adhan",!0);if(a.appendChild(n),0===o.length){const t=document.createElement("div");return t.className="no-files",t.textContent="No additional audio files found",void a.appendChild(t)}o.forEach((i=>{if(i&&"object"==typeof i){const o=this.createFileButton(t,e,i.name||"unknown",i.local||!1,i.url||"",i.needsDownload||!1);a.appendChild(o)}}))}catch(i){console.error("Error fetching from server, falling back to static list:",i);const o=await this.getStaticFileList(e);a.innerHTML="",o.forEach((i=>{const o=this.createFileButton(t,e,i,!0);a.appendChild(o)}))}}catch(t){console.error("Error loading files:",t),a.innerHTML='<div class="error">Error loading files</div>'}}createFileButton(t,e,a,i=!0,o="",n=!1){a||(console.error("Missing fileName in createFileButton"),a="unknown");const s=document.createElement("button");return s.className="file-button",s.textContent=a.replace(".mp3","").replace(/_/g," "),n&&(s.classList.add("needs-download"),s.innerHTML+=' <span class="download-icon">⬇️</span>'),s.onclick=async()=>{if(n&&"zub165.github.io"!==window.location.hostname){s.disabled=!0,s.innerHTML='Downloading... <span class="loading-spinner"></span>';try{const t=await fetch(`/adhans/${e}/download/${a}`);if(!t.ok)throw new Error("Download failed");const i=await t.json();if(!i.success)throw new Error("Download failed");s.classList.remove("needs-download"),s.innerHTML=a.replace(".mp3","").replace(/_/g," "),o=i.path,n=!1}catch(t){return console.error("Error downloading file:",t),s.innerHTML="Download Failed ⚠️",void(s.disabled=!1)}}const i=document.getElementById(`${t}QariSelect`);i&&(i.value=e),localStorage.setItem(`${t}Qari`,e),localStorage.setItem(`${t}AudioFile_${e}`,a),o&&localStorage.setItem(`${t}AudioURL_${e}`,o);const r=document.getElementById(`${t}Modal`);r&&(r.style.display="none"),console.log(`Selected ${a} from ${e} for ${t}`)},s}},i=class{constructor(){this.compassElement=document.getElementById("qibla-compass"),this.needleElement=document.getElementById("compass-needle"),this.directionElement=document.getElementById("qibla-direction"),this.coordinates=null,this.qiblaDirection=null,this.isCalibrating=!1,this.hasPermission=!1,this.isSupported="DeviceOrientationEvent"in window,this.orientationHandler=this.handleDeviceOrientation.bind(this),this.hasShownStaticWarning=!1,this.hasReceivedOrientation=!1}async initialize(t){try{if(!t)throw new Error("Coordinates are required for Qibla compass");return this.coordinates=t,this.qiblaDirection=this.calculateQiblaDirection(t.latitude,t.longitude),console.log("Qibla direction calculated:",this.qiblaDirection),this.updateDirectionDisplay(this.qiblaDirection),await this.requestOrientationPermission(),this.setupEventListeners(),!0}catch(t){return console.error("Error initializing Qibla compass:",t),this.showError("Failed to initialize Qibla compass"),!1}}async requestOrientationPermission(){try{"function"==typeof DeviceOrientationEvent.requestPermission?this.showCalibrationButton():(this.startListening(),this.hasPermission=!0)}catch(t){console.error("Error requesting orientation permission:",t),this.showError("Device orientation not available")}}showCalibrationButton(){if(!document.getElementById("calibrate-compass")){const t=document.createElement("button");t.id="calibrate-compass",t.className="calibrate-button",t.textContent="Calibrate Compass",t.onclick=()=>this.calibrateCompass(),this.compassElement?this.compassElement.parentNode.insertBefore(t,this.compassElement.nextSibling):document.body.appendChild(t)}}async calibrateCompass(){try{if(this.isCalibrating)return;if(this.isCalibrating=!0,"function"==typeof DeviceOrientationEvent.requestPermission)if("granted"===await DeviceOrientationEvent.requestPermission()){this.hasPermission=!0,this.startListening();const t=document.getElementById("calibrate-compass");t&&(t.style.display="none"),this.showMessage("Compass calibrated successfully"),this.showCalibrationInstructions()}else this.showError("Permission denied for device orientation"),this.updateStaticCompass();else this.hasPermission=!0,this.startListening(),this.showCalibrationInstructions()}catch(t){console.error("Error calibrating compass:",t),this.showError("Failed to calibrate compass - showing static direction"),this.updateStaticCompass()}finally{this.isCalibrating=!1}}startListening(){this.isSupported?(window.DeviceOrientationEvent?(window.addEventListener("deviceorientation",this.orientationHandler),console.log("Started listening for device orientation")):window.DeviceOrientationAbsoluteEvent?(window.addEventListener("deviceorientationabsolute",this.orientationHandler),console.log("Started listening for absolute device orientation")):(console.warn("Device orientation not supported"),this.updateStaticCompass(),this.showError("Dynamic compass not supported - showing static direction")),setTimeout((()=>{this.hasReceivedOrientation||(console.warn("No orientation data received after timeout"),this.updateStaticCompass())}),3e3)):(console.warn("Device orientation not supported"),this.updateStaticCompass(),this.showError("Compass not supported on this device - showing static direction"))}stopListening(){window.removeEventListener("deviceorientation",this.orientationHandler),console.log("Stopped listening for device orientation")}handleDeviceOrientation(t){const e=t.alpha;if(null==e)return console.warn("Device heading not available"),t.webkitCompassHeading?void this.updateCompassWithWebkitHeading(t.webkitCompassHeading):void this.updateStaticCompass();const a=(360-e+this.qiblaDirection)%360;this.needleElement&&(this.needleElement.style.transform=`rotate(${a}deg)`)}updateCompassWithWebkitHeading(t){const e=(t+this.qiblaDirection)%360;this.needleElement&&(this.needleElement.style.transform=`rotate(${e}deg)`)}updateStaticCompass(){this.needleElement&&!this.hasShownStaticWarning&&(this.needleElement.style.transform=`rotate(${this.qiblaDirection}deg)`,this.showMessage("Using static compass - showing direction from North"),this.hasShownStaticWarning=!0)}calculateQiblaDirection(t,e){try{const a=this.toRadians(t),i=this.toRadians(e),o=this.toRadians(21.4225),n=this.toRadians(39.8262),s=Math.sin(n-i),r=Math.cos(a)*Math.tan(o)-Math.sin(a)*Math.cos(n-i);let l=Math.atan2(s,r);return l=this.toDegrees(l),l=(l+360)%360,l}catch(t){return console.error("Error calculating Qibla direction:",t),0}}updateDirectionDisplay(t){if(this.directionElement){const e=Math.round(t);this.directionElement.textContent=`${e}°`}!this.isSupported&&this.needleElement&&(this.needleElement.style.transform=`rotate(${t}deg)`)}toRadians(t){return t*(Math.PI/180)}toDegrees(t){return t*(180/Math.PI)}showError(t){console.error(t);const e=document.createElement("div");e.className="compass-error",e.textContent=t,this.compassElement&&this.compassElement.appendChild(e)}showMessage(t){const e=document.createElement("div");e.className="compass-message",e.textContent=t,this.compassElement&&(this.compassElement.appendChild(e),setTimeout((()=>{e.remove()}),3e3))}showCalibrationInstructions(){const t=document.createElement("div");t.className="compass-instructions",t.innerHTML="\n            <p>For accurate readings:</p>\n            <ol>\n                <li>Hold your device flat</li>\n                <li>Move in a figure-8 pattern</li>\n                <li>Keep away from magnetic objects</li>\n            </ol>\n        ",this.compassElement&&(this.compassElement.appendChild(t),setTimeout((()=>{t.remove()}),1e4))}setupEventListeners(){document.addEventListener("visibilitychange",(()=>{document.hidden?this.stopListening():this.hasPermission&&this.startListening()}))}async updateCoordinates(t){try{if(!t)throw new Error("Coordinates are required for Qibla compass update");return this.coordinates=t,this.qiblaDirection=this.calculateQiblaDirection(t.latitude,t.longitude),console.log("Qibla direction recalculated:",this.qiblaDirection),this.updateDirectionDisplay(this.qiblaDirection),this.hasPermission&&this.isSupported||this.updateStaticCompass(),!0}catch(t){return console.error("Error updating Qibla compass coordinates:",t),!1}}},o=class{constructor(){this.themes={light:{name:"Light",icon:"☀️",colors:{"--primary-color":"#4CAF50","--secondary-color":"#2196F3","--background-color":"#ffffff","--card-bg":"#ffffff","--text-primary":"#333333","--text-secondary":"#666666","--border-color":"#e0e0e0","--shadow-color":"rgba(0, 0, 0, 0.1)","--highlight-color":"#4CAF50","--prayer-card-active":"#e8f5e9"}},dark:{name:"Dark",icon:"🌙",colors:{"--primary-color":"#81c784","--secondary-color":"#64b5f6","--background-color":"#121212","--card-bg":"#1e1e1e","--text-primary":"#ffffff","--text-secondary":"#b0b0b0","--border-color":"#333333","--shadow-color":"rgba(0, 0, 0, 0.3)","--highlight-color":"#81c784","--prayer-card-active":"#1b5e20"}},desert:{name:"Desert",icon:"🕌",colors:{"--primary-color":"#d4ac0d","--secondary-color":"#b8860b","--background-color":"#f7e9d7","--card-bg":"#ffffff","--text-primary":"#5d4037","--text-secondary":"#8d6e63","--border-color":"#d7ccc8","--shadow-color":"rgba(93, 64, 55, 0.1)","--highlight-color":"#ffd700","--prayer-card-active":"#fff8e1"}},emerald:{name:"Emerald",icon:"💠",colors:{"--primary-color":"#2e7d32","--secondary-color":"#00796b","--background-color":"#e8f5e9","--card-bg":"#ffffff","--text-primary":"#1b5e20","--text-secondary":"#388e3c","--border-color":"#c8e6c9","--shadow-color":"rgba(46, 125, 50, 0.1)","--highlight-color":"#00c853","--prayer-card-active":"#b9f6ca"}},azure:{name:"Azure",icon:"🌊",colors:{"--primary-color":"#1976d2","--secondary-color":"#0288d1","--background-color":"#e3f2fd","--card-bg":"#ffffff","--text-primary":"#0d47a1","--text-secondary":"#1565c0","--border-color":"#bbdefb","--shadow-color":"rgba(25, 118, 210, 0.1)","--highlight-color":"#2196f3","--prayer-card-active":"#b3e5fc"}},ramadan:{name:"Ramadan",icon:"🌙",colors:{"--primary-color":"#c17900","--secondary-color":"#ff9800","--background-color":"#fff3e0","--card-bg":"#ffffff","--text-primary":"#e65100","--text-secondary":"#f57c00","--border-color":"#ffe0b2","--shadow-color":"rgba(255, 152, 0, 0.1)","--highlight-color":"#ffd54f","--prayer-card-active":"#fff8e1"}},night:{name:"Night",icon:"✨",colors:{"--primary-color":"#5c6bc0","--secondary-color":"#3f51b5","--background-color":"#1a237e","--card-bg":"#283593","--text-primary":"#e8eaf6","--text-secondary":"#c5cae9","--border-color":"#3949ab","--shadow-color":"rgba(92, 107, 192, 0.3)","--highlight-color":"#7986cb","--prayer-card-active":"#303f9f"}},calligraphy:{name:"Calligraphy",icon:"📜",colors:{"--primary-color":"#000000","--secondary-color":"#424242","--background-color":"#f5f5f5","--card-bg":"#ffffff","--text-primary":"#212121","--text-secondary":"#616161","--border-color":"#bdbdbd","--shadow-color":"rgba(0, 0, 0, 0.1)","--highlight-color":"#757575","--prayer-card-active":"#eeeeee"}}}}initialize(){console.log("🎨 Initializing theme manager..."),this.createThemeSelector();const t=localStorage.getItem("theme")||"light";this.applyTheme(t);const e=document.getElementById("theme-toggle-btn");e&&e.addEventListener("click",(()=>{const t="dark"===document.documentElement.getAttribute("data-theme")?"light":"dark";this.applyTheme(t)})),console.log("✅ Theme manager initialized with theme:",t)}createThemeSelector(){const t=document.createElement("div");t.className="theme-panel",t.innerHTML=`\n            <div class="theme-panel-header">\n                <h3>Themes</h3>\n                <button class="theme-panel-toggle">×</button>\n            </div>\n            <div class="theme-grid">\n                ${Object.entries(this.themes).map((([t,e])=>`\n                    <button class="theme-option" data-theme="${t}">\n                        <span class="theme-icon">${e.icon}</span>\n                        <span class="theme-name">${e.name}</span>\n                    </button>\n                `)).join("")}\n            </div>\n        `,document.body.appendChild(t);const e=document.querySelector(".theme-panel-toggle");e?.addEventListener("click",(()=>{t.classList.toggle("collapsed")})),document.querySelectorAll(".theme-option").forEach((t=>{t.addEventListener("click",(t=>{const e=t.currentTarget.dataset.theme;this.applyTheme(e)}))}));const a=document.querySelector("header");if(a){const e=document.createElement("button");e.className="theme-switcher-btn",e.innerHTML="🎨",e.addEventListener("click",(()=>{t.classList.toggle("collapsed")})),a.appendChild(e)}}applyTheme(t){const e=this.themes[t];e&&(Object.entries(e.colors).forEach((([t,e])=>{document.documentElement.style.setProperty(t,e)})),document.querySelectorAll(".theme-option").forEach((e=>{e.classList.toggle("active",e.dataset.theme===t)})),localStorage.setItem("theme",t),document.documentElement.setAttribute("data-theme",t),window.dispatchEvent(new CustomEvent("themechange",{detail:{theme:t}})))}};class n{constructor(){this.prayerCalculation=null,this.adhanPlayer=null,this.themeManager=null,this.locationInfo=document.getElementById("location-info"),this.locationCoords=document.getElementById("location-coords"),this.refreshButton=document.getElementById("refresh-location"),this.qariRefreshButton=document.getElementById("refresh-qari"),this.coordinates=null,this.isUpdating=!1,this.moonPhases=["🌑","🌒","🌓","🌔","🌕","🌖","🌗","🌘"],this.isInitialized=!1,this.qiblaCompass=null}async initialize(){try{return console.log("Initializing application..."),await this.initializeCoreComponents(),await this.initializePrayerCalculation(),this.setupEventListeners(),this.isInitialized=!0,console.log("App initialized successfully"),!0}catch(t){return console.error("Error initializing app:",t),!1}}async initializeCoreComponents(){try{return console.log("Loading Adhan.js library..."),await async function(){return new Promise(((e,a)=>{if(void 0!==window.Adhan)return console.log("✅ Adhan.js already loaded"),void e();const i=document.createElement("script");i.src="https://unpkg.com/adhan@4.4.3/dist/adhan.min.js",i.async=!0,i.onload=()=>{void 0!==window.Adhan?(console.log("✅ Adhan.js loaded successfully"),e()):(console.error("❌ Adhan.js failed to initialize"),t().then(e).catch(a))},i.onerror=async()=>{console.warn("⚠️ Failed to load Adhan.js from CDN. Trying local fallback...");try{await t(),e()}catch(t){a(t)}},document.body.appendChild(i)}))}(),console.log("Adhan.js library loaded successfully"),this.adhanPlayer=new a,console.log("Adhan player initialized"),this.themeManager=new o,this.themeManager.initialize(),console.log("Theme manager initialized"),await this.getUserLocation(),!0}catch(t){return console.error("Error initializing core components:",t),!1}}async initializePrayerCalculation(){try{if("undefined"==typeof Adhan)throw new Error("Adhan.js library not loaded");this.prayerCalculation=new e,this.prayerCalculation.setAdhanPlayer(this.adhanPlayer);const t=await this.prayerCalculation.initialize();return t?console.log("Prayer calculation initialized successfully"):console.error("Failed to initialize prayer calculation"),t}catch(t){return console.error("Error initializing prayer calculation:",t),!1}}async getUserLocation(){try{this.locationInfo&&(this.locationInfo.textContent="Loading location...");const t=parseFloat(localStorage.getItem("latitude")),e=parseFloat(localStorage.getItem("longitude"));if(!isNaN(t)&&!isNaN(e))return console.log("Using saved location:",{latitude:t,longitude:e}),this.coordinates={latitude:t,longitude:e},this.updateLocationDisplay(this.coordinates),this.coordinates;if("geolocation"in navigator){console.log("Getting user location...");try{const t=await new Promise(((t,e)=>{navigator.geolocation.getCurrentPosition(t,e,{enableHighAccuracy:!0,timeout:1e4,maximumAge:6e4})})),{latitude:e,longitude:a}=t.coords;return console.log("Location obtained:",{latitude:e,longitude:a}),localStorage.setItem("latitude",e.toString()),localStorage.setItem("longitude",a.toString()),this.coordinates={latitude:e,longitude:a},this.updateLocationDisplay(this.coordinates),this.coordinates}catch(t){console.warn("Geolocation error:",t)}}else console.warn("Geolocation not available");return this.useDefaultLocation()}catch(t){return console.error("Error getting location:",t),this.useDefaultLocation()}}useDefaultLocation(){return console.log("Using default location (Makkah)"),this.coordinates={latitude:21.4225,longitude:39.8262},this.updateLocationDisplay(this.coordinates,!0),localStorage.setItem("latitude",this.coordinates.latitude.toString()),localStorage.setItem("longitude",this.coordinates.longitude.toString()),this.coordinates}updateLocationDisplay(t,e=!1){this.locationInfo&&(this.locationInfo.textContent=e?"Using default location (Makkah)":"Location detected"),this.locationCoords&&(this.locationCoords.textContent=`${t.latitude.toFixed(4)}°, ${t.longitude.toFixed(4)}°`),this.initializeQiblaCompass(t)}async initializeQiblaCompass(t){try{if(!t)throw new Error("Coordinates required for Qibla compass");if(console.log("Initializing Qibla compass with coordinates:",t),this.qiblaCompass)return await this.qiblaCompass.updateCoordinates(t),void console.log("Updated existing Qibla compass with new coordinates");const e=document.getElementById("qibla-compass");if(e){const t=e.closest(".qibla-compass-container");t?t.remove():e.remove()}this.qiblaCompass=new i,this.ensureCompassExists(),await this.qiblaCompass.initialize(t),console.log("Qibla compass initialized successfully")}catch(e){console.error("Error initializing Qibla compass:",e),this.qiblaCompass||document.getElementById("qibla-compass")||this.createStaticCompass(t)}}ensureCompassExists(){let t=document.getElementById("qibla-compass-container");if(!t){t=document.createElement("div"),t.id="qibla-compass-container",t.className="qibla-compass-container";const e=document.createElement("div");e.id="qibla-compass",e.className="qibla-compass";const a=document.createElement("div");a.id="compass-needle",a.className="compass-needle";const i=document.createElement("div");i.id="qibla-direction",i.className="qibla-direction",e.appendChild(a),e.appendChild(i),t.appendChild(e),(document.querySelector("main")||document.body).appendChild(t)}}createStaticCompass(t){try{if(document.getElementById("qibla-compass")){const e=document.getElementById("compass-needle"),a=document.getElementById("qibla-direction"),i=this.calculateQiblaDirection(t.latitude,t.longitude);e&&(e.style.transform=`rotate(${i}deg)`),a&&(a.textContent=`${Math.round(i)}° (Static)`);const o=document.getElementById("qibla-compass");if(!o.querySelector(".compass-message")&&o){const t=document.createElement("div");t.className="compass-message",t.textContent="Static compass - showing direction from North",o.appendChild(t)}return}this.ensureCompassExists();const e=this.calculateQiblaDirection(t.latitude,t.longitude),a=document.getElementById("compass-needle");a&&(a.style.transform=`rotate(${e}deg)`);const i=document.getElementById("qibla-direction");i&&(i.textContent=`${Math.round(e)}° (Static)`);const o=document.createElement("div");o.className="compass-message",o.textContent="Static compass - showing direction from North";const n=document.getElementById("qibla-compass");n&&n.appendChild(o)}catch(t){console.error("Error creating static compass:",t)}}calculateQiblaDirection(t,e){const a=this.toRadians(t),i=this.toRadians(e),o=this.toRadians(21.4225),n=this.toRadians(39.8262),s=Math.sin(n-i),r=Math.cos(a)*Math.tan(o)-Math.sin(a)*Math.cos(n-i);let l=Math.atan2(s,r);return l=this.toDegrees(l),l=(l+360)%360,l}toRadians(t){return t*(Math.PI/180)}toDegrees(t){return t*(180/Math.PI)}setupEventListeners(){document.addEventListener("visibilitychange",(()=>{!document.hidden&&this.isInitialized&&this.prayerCalculation?.recalculatePrayerTimes()})),this.refreshButton&&this.refreshButton.addEventListener("click",(async()=>{if(!this.isUpdating){this.isUpdating=!0,this.refreshButton.disabled=!0;try{localStorage.removeItem("latitude"),localStorage.removeItem("longitude");const t=await this.getUserLocation();this.prayerCalculation&&t&&await this.prayerCalculation.updateCoordinates(t.latitude,t.longitude)}catch(t){console.error("Error refreshing location:",t),this.showError("Failed to update location. Please try again.")}finally{this.isUpdating=!1,this.refreshButton.disabled=!1}}}))}showError(t){const e=document.createElement("div");e.className="error-message",e.textContent=t,document.body.appendChild(e)}}document.addEventListener("DOMContentLoaded",(()=>{(new n).initialize()}))})();
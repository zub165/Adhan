(()=>{"use strict";async function e(){return new Promise(((e,t)=>{const a=document.createElement("script");a.src="/js/modules/adhan.js",a.type="text/javascript",a.async=!0,a.onload=()=>{void 0!==window.Adhan?(console.log("✅ Local Adhan.js loaded successfully"),e()):(console.error("❌ Local Adhan.js did not initialize properly"),t(new Error("Local Adhan.js did not initialize properly")))},a.onerror=()=>{console.error("❌ Failed to load local Adhan.js"),t(new Error("Failed to load local Adhan.js"))},document.body.appendChild(a)}))}const t=class{constructor(){this.coordinates=null,this.prayerTimes=null,this.calculationMethod="MuslimWorldLeague",this.madhab="Shafi",this.highLatitudeRule="MiddleOfTheNight",this.lastCalculation=null,this.notificationTimeout=null,this.adhanPlayer=null,this.angles={fajr:-18,sunrise:-.833,dhuhr:0,maghrib:-.833,isha:-18},this.dstAdjustment=this.getDSTAdjustment(),document.addEventListener("DOMContentLoaded",(()=>{const e=document.querySelector('select[name="calculationMethod"]');e&&e.addEventListener("change",(e=>{this.calculationMethod=e.target.value,localStorage.setItem("calculationMethod",this.calculationMethod),this.recalculatePrayerTimes()})),document.querySelectorAll('input[name="madhab"]').forEach((e=>{e.addEventListener("change",(e=>{this.madhab=e.target.value,localStorage.setItem("madhab",this.madhab),this.recalculatePrayerTimes()}))}))}))}setAdhanPlayer(e){this.adhanPlayer=e}async initialize(){try{"undefined"==typeof Adhan&&await new Promise((e=>{const t=setInterval((()=>{"undefined"!=typeof Adhan&&(clearInterval(t),e())}),100)})),this.loadSettings(),this.coordinates=this.coordinates||new Adhan.Coordinates(21.4225,39.8262);const e=this.getCalculationParameters();return await this.calculatePrayerTimes(e),console.log("Prayer calculation initialized successfully"),!0}catch(e){return console.error("Error initializing prayer calculation:",e),!1}}loadSettings(){const e=localStorage.getItem("calculationMethod");e&&Adhan.CalculationMethod[e]&&(this.calculationMethod=e);const t=localStorage.getItem("madhab");t&&Adhan.Madhab[t]&&(this.madhab=t);const a=parseFloat(localStorage.getItem("latitude")),o=parseFloat(localStorage.getItem("longitude"));isNaN(a)||isNaN(o)||(this.coordinates=new Adhan.Coordinates(a,o))}getCalculationParameters(){let e=Adhan.CalculationMethod[this.calculationMethod]();return e.madhab=Adhan.Madhab[this.madhab],e.highLatitudeRule=Adhan.HighLatitudeRule[this.highLatitudeRule],e}async calculatePrayerTimes(e){try{const t=new Date,a=new Adhan.PrayerTimes(this.coordinates,t,e);this.prayerTimes={fajr:a.fajr,sunrise:a.sunrise,dhuhr:a.dhuhr,asr:a.asr,maghrib:a.maghrib,isha:a.isha};const o=new Date(this.prayerTimes.fajr),i=new Adhan.PrayerTimes(this.coordinates,new Date(t.getTime()-864e5),e).maghrib,n=this.prayerTimes.fajr-i,s=new Date(i.getTime()+2*n/3),r=new Date(o.getTime()-6e5),l=new Date(this.prayerTimes.sunrise.getTime()+12e5);return this.prayerTimes.tahajjud=s,this.prayerTimes.suhoor=r,this.prayerTimes.ishraq=l,!0}catch(e){return console.error("Error calculating prayer times:",e),!1}}getPrayerTimes(){return this.prayerTimes}async updateCoordinates(e,t){return this.coordinates=new Adhan.Coordinates(e,t),localStorage.setItem("latitude",e.toString()),localStorage.setItem("longitude",t.toString()),await this.calculatePrayerTimes(this.getCalculationParameters())}async updateCalculationMethod(e){return!!Adhan.CalculationMethod[e]&&(this.calculationMethod=e,localStorage.setItem("calculationMethod",e),await this.calculatePrayerTimes(this.getCalculationParameters()))}async updateMadhab(e){return!!Adhan.Madhab[e]&&(this.madhab=e,localStorage.setItem("madhab",e),await this.calculatePrayerTimes(this.getCalculationParameters()))}toRadians(e){return e*(Math.PI/180)}toDegrees(e){return e*(180/Math.PI)}getSunDeclination(e){const t=e.getDate(),a=e.getMonth()+1,o=e.getFullYear(),i=367*o-Math.floor(7*(o+Math.floor((a+9)/12))/4)+Math.floor(275*a/9)+t-730531.5,n=357.52911+.9856003*i,s=280.46646+.9856474*i+1.915*Math.sin(this.toRadians(n))+.02*Math.sin(this.toRadians(2*n));return 23.439-4e-7*i*Math.sin(this.toRadians(s))}getEquationOfTime(e){const t=e.getDate(),a=e.getMonth()+1,o=e.getFullYear(),i=367*o-Math.floor(7*(o+Math.floor((a+9)/12))/4)+Math.floor(275*a/9)+t-730531.5,n=280.46646+.9856474*i,s=357.52911+.9856003*i,r=(Math.sin(this.toRadians(s)),Math.cos(this.toRadians(s)),n+1.915*Math.sin(this.toRadians(s))+.02*Math.sin(this.toRadians(2*s)));return Math.cos(this.toRadians(s)),Math.cos(this.toRadians(2*s)),4*(n-(r-2.466*Math.sin(this.toRadians(2*r))+.053*Math.sin(this.toRadians(4*r))))}calculatePrayerTime(e,t,a,o){try{const i=this.toRadians(t),n=this.toRadians(this.getSunDeclination(e));let s=o;o!==this.angles.sunrise&&o!==this.angles.maghrib||(s-=.833+.0347*Math.sqrt(this.coordinates.elevation||0));const r=this.toRadians(s);let l=(Math.sin(r)-Math.sin(i)*Math.sin(n))/(Math.cos(i)*Math.cos(n));if(Math.abs(l)>1){if(!(o<0))return console.warn(`Prayer time calculation not valid for this latitude (${t}) and date`),null;l=o>-18?-1:1}const c=this.toDegrees(Math.acos(l));let d=12+(o<0?-c:c)/15-a/15-this.getEquationOfTime(e)/60+-e.getTimezoneOffset()/60;for(;d<0;)d+=24;for(;d>=24;)d-=24;const h=Math.floor(d),u=Math.floor(60*(d-h)),m=Math.floor(60*(60*(d-h)-u)),g=new Date(e);return g.setHours(h,u,m,0),h<6&&e.getHours()>18&&g.setDate(g.getDate()+1),g}catch(e){return console.error("Error in calculatePrayerTime:",e),null}}getDSTAdjustment(){try{const e=new Date((new Date).getFullYear(),0,1).getTimezoneOffset(),t=new Date((new Date).getFullYear(),6,1).getTimezoneOffset();return Math.max(e,t)!==(new Date).getTimezoneOffset()?1:0}catch(e){return console.warn("Error determining DST:",e),0}}calculateAsrTime(e,t,a){try{const o=this.toRadians(t),i=this.toRadians(this.getSunDeclination(e)),n=(this.getEquationOfTime(e),e.getTimezoneOffset(),Math.asin(Math.sin(o)*Math.sin(i)+Math.cos(o)*Math.cos(i))),s="hanafi"===this.madhab.toLowerCase()?2:1,r=Math.atan(1/(s+Math.tan(n))),l=this.toDegrees(Math.PI/2-r);return this.calculatePrayerTime(e,t,a,l)}catch(e){return console.error("Error calculating Asr time:",e),null}}async recalculatePrayerTimes(){this.coordinates&&await this.calculatePrayerTimes(this.getCalculationParameters())}async updatePrayerTimesUI(e){if(!e)return void console.error("No prayer times to update UI");const t={fajr:"fajr",dhuhr:"dhuhr",asr:"asr",maghrib:"maghrib",isha:"isha"},a=this.calculateAdditionalTimes(e);console.log("All prayer times:",{standard:Object.fromEntries(Object.entries(e).map((([e,t])=>[e,this.formatTime(t)]))),additional:Object.fromEntries(Object.entries(a).map((([e,t])=>[e,this.formatTime(t)])))});for(const[a,o]of Object.entries(t)){const t=e[a];if(t){const e=this.formatTime(t),a=document.querySelector(`.prayer-card[data-prayer="${o}"] .prayer-time`);a?(a.textContent=e,console.log(`Updated ${o} time to ${e}`)):console.warn(`Element for ${o} not found`)}else console.warn(`No time available for ${a}`)}const o={tahajjud:"tahajjud",suhoor:"suhoor",ishraq:"ishraq"};for(const[e,t]of Object.entries(o)){const o=a[e];if(o){const e=this.formatTime(o),a=document.querySelector(`.prayer-card[data-prayer="${t}"] .prayer-time`);a?(a.textContent=e,console.log(`Updated ${t} time to ${e}`)):console.warn(`Element for ${t} not found`)}else console.warn(`No additional time available for ${e}`)}this.updateNextPrayer(e,a),this.scheduleNextPrayerNotification(e,a)}calculateAdditionalTimes(e){if(!e||!e.fajr||!e.maghrib)return console.warn("Missing required prayer times for additional calculations"),this.getDefaultAdditionalTimes();const t={};try{new Date;const a=new Date(e.fajr),o=new Date(e.maghrib);if(isNaN(a.getTime())||isNaN(o.getTime()))throw new Error("Invalid prayer time dates");let i=new Date(o),n=new Date(a);a.getHours()<o.getHours()&&(n=new Date(a),n.setDate(n.getDate()+1));const s=n-i;if(s<=0)throw new Error("Invalid night duration calculation");const r=new Date(i.getTime()+2*s/3);t.tahajjud=r;const l=new Date(a);if(l.setMinutes(l.getMinutes()-10),t.suhoor=l,e.sunrise){const a=new Date(e.sunrise);if(!isNaN(a.getTime())){const e=new Date(a);e.setMinutes(e.getMinutes()+20),t.ishraq=e}}return console.log("Additional prayer times calculated:",{tahajjud:this.formatTime(t.tahajjud),suhoor:this.formatTime(t.suhoor),ishraq:t.ishraq?this.formatTime(t.ishraq):"N/A"}),t}catch(e){return console.error("Error calculating additional prayer times:",e),this.getDefaultAdditionalTimes()}}getDefaultAdditionalTimes(){console.log("Using default additional prayer times");const e={},t=new Date,a=new Date(t);a.setHours(3,0,0,0),e.tahajjud=a;const o=new Date(t);o.setHours(4,30,0,0),e.suhoor=o;const i=new Date(t);return i.setHours(7,0,0,0),e.ishraq=i,e}formatTime(e){if(!e||!(e instanceof Date)||isNaN(e.getTime()))return console.error("Invalid date for formatting:",e),"--:--";try{return e.toLocaleTimeString("en-US",{hour:"2-digit",minute:"2-digit",hour12:!0})}catch(t){console.error("Error formatting time:",t);const a=e.getHours(),o=e.getMinutes();return`${a%12||12}:${o<10?`0${o}`:o} ${a>=12?"PM":"AM"}`}}updateNextPrayer(e,t){const a=new Date,o={...e,...t},i=["tahajjud","suhoor","fajr","sunrise","ishraq","dhuhr","asr","maghrib","isha"];let n=null,s=null;for(const e of i){const t=o[e];if(t&&t>a){n=e,s=t;break}}if(!n){n="tahajjud";const e=new Date(t.tahajjud);e.setDate(e.getDate()+1),s=e}document.querySelectorAll(".prayer-card").forEach((e=>{e.classList.remove("active","next-prayer")}));const r=document.querySelector(`.prayer-card[data-prayer="${n}"]`);if(r){r.classList.add("active","next-prayer");const e=r.querySelector(".countdown");e&&(this.updateCountdown(e,s),this.countdownInterval&&clearInterval(this.countdownInterval),this.countdownInterval=setInterval((()=>{this.updateCountdown(e,s)}),6e4))}}scheduleNextPrayerNotification(e,t){this.notificationTimeout&&clearTimeout(this.notificationTimeout);const a=new Date,o={...e,...t},i=["tahajjud","suhoor","fajr","sunrise","ishraq","dhuhr","asr","maghrib","isha"];let n=null,s=null;for(const e of i){const t=o[e];if(t&&t>a){n=e,s=t;break}}if(!n){n="tahajjud";const e=new Date(t.tahajjud);e.setDate(e.getDate()+1),s=e}const r=s.getTime()-a.getTime();this.notificationTimeout=setTimeout((()=>{this.showPrayerNotification(n),this.scheduleNextPrayerNotification(e,t)}),r),console.log(`Next prayer: ${n} at ${this.formatTime(s)} (in ${Math.round(r/6e4)} minutes)`)}async showPrayerNotification(e){if("sunrise"!==e)try{const t={tahajjud:"Tahajjud",suhoor:"Suhoor Ends",fajr:"Fajr",ishraq:"Ishraq",dhuhr:"Dhuhr",asr:"Asr",maghrib:"Maghrib",isha:"Isha"}[e]||e.charAt(0).toUpperCase()+e.slice(1);"granted"===Notification.permission&&(new Notification(`Time for ${t}`,{body:"suhoor"===e?"Suhoor time is ending soon":`It's time for ${t} prayer`,icon:"/icons/mosque.png",silent:!0}),this.adhanPlayer&&await this.adhanPlayer.playAzan(e))}catch(e){console.error("Error showing notification:",e)}}showError(e){console.error(e);const t=document.createElement("div");t.className="error",t.textContent=e,document.body.appendChild(t),setTimeout((()=>t.remove()),5e3)}updateCountdown(e,t){if(!e||!t)return;const a=t-new Date;if(a<=0)return void(e.textContent="Now");const o=Math.floor(a/36e5),i=Math.floor(a%36e5/6e4);let n="";o>0&&(n+=`${o} hour${o>1?"s":""} `),n+=`${i} minute${1!==i?"s":""}`,e.textContent=`In ${n}`}},a=class{constructor(){this.availableQaris=["Local","abdul-basit","al-hussary","al-minshawi","al-ghamdi","mishary-rashid","madinah","makkah","islamcan"],this.currentQari=localStorage.getItem("defaultQari")||"Local",this.baseUrl=window.location.hostname.includes("github.io")?"/Adhan":"",this.audio=null,this.isPlaying=!1,this.isLoading=!1,"loading"===document.readyState?document.addEventListener("DOMContentLoaded",(()=>this.initializeQariSelectors())):this.initializeQariSelectors()}initializeQariSelectors(){["tahajjud","suhoor","fajr","ishraq","dhuhr","asr","maghrib","isha"].forEach((e=>{const t=document.querySelector(`.prayer-card[data-prayer="${e}"]`);if(t){let a=t.querySelector(".qari-select-container");if(!a){a=document.createElement("div"),a.className="qari-select-container";const o=document.createElement("label");o.textContent="Select Qari: ",o.htmlFor=`${e}QariSelect`,a.appendChild(o);const i=document.createElement("select");i.id=`${e}QariSelect`,i.className="qari-select",a.appendChild(i);const n=t.querySelector(".adhan-controls");n?n.parentNode.insertBefore(a,n):t.appendChild(a)}let o=t.querySelector(".browse-button");o||(o=document.createElement("button"),o.textContent="Browse Files",o.className="browse-button",o.onclick=()=>this.showFileSelector(e),a.appendChild(o));let i=document.getElementById(`${e}Modal`);i||(i=document.createElement("div"),i.id=`${e}Modal`,i.className="file-selector-modal",i.style.display="none",i.innerHTML='\n                        <div class="modal-content">\n                            <div class="modal-header">\n                                <h3>Select Adhan File</h3>\n                                <button class="close-modal">&times;</button>\n                            </div>\n                            <div class="modal-body">\n                                <div class="file-browser">\n                                    <div class="qari-list"></div>\n                                    <div class="file-list"></div>\n                                </div>\n                            </div>\n                        </div>\n                    ',document.body.appendChild(i),i.querySelector(".close-modal").onclick=()=>{i.style.display="none"},window.onclick=e=>{e.target===i&&(i.style.display="none")});const n=document.getElementById(`${e}QariSelect`);if(n){const t=n.cloneNode(!0);n.parentNode.replaceChild(t,n),t.addEventListener("change",(async t=>{const a=t.target.value;localStorage.setItem(`${e}Qari`,a),console.log(`Selected Qari for ${e}: ${a}`)}))}const s=t.querySelector(".play-adhan"),r=t.querySelector(".stop-adhan");if(s){const t=s.cloneNode(!0);s.parentNode.replaceChild(t,s),t.addEventListener("click",(async()=>{this.isPlaying||(t.disabled=!0,r&&(r.disabled=!1),await this.playAzan(e))}))}if(r){const e=r.cloneNode(!0);r.parentNode.replaceChild(e,r),e.addEventListener("click",(async()=>{this.isPlaying&&(await this.stopAzan(),s&&(s.disabled=!1),e.disabled=!0)}))}}})),this.scanAvailableQaris()}async updateFileList(e,t){const a=document.getElementById(`${e}Modal`).querySelector(".file-list");if(a)try{a.innerHTML="";const o=document.createElement("option");o.value="adhan.mp3",o.textContent="Default Adhan",a.appendChild(o);const i=await this.getStaticFileList(t);i.forEach((e=>{const t=document.createElement("option");t.value=e,t.textContent=e.replace(".mp3","").replace(/_/g," "),a.appendChild(t)}));const n=localStorage.getItem(`${e}AudioFile_${t}`);n&&i.includes(n)&&(a.value=n),a.addEventListener("change",(a=>{localStorage.setItem(`${e}AudioFile_${t}`,a.target.value)}))}catch(e){console.error("Error loading audio files:",e)}}getStaticFileList(e){const t={Local:["adhan.mp3","azan.mp3","azan2.mp3","default-azan.mp3","default-azanfajr.mp3"],"abdul-basit":["adhan_masr.mp3","adhan_makkah.mp3","adhan_fajr_masr.mp3"],"al-hussary":["adhan_cairo.mp3","adhan_fajr.mp3"],"al-minshawi":["adhan1.mp3","adhan2.mp3","adhan3.mp3","adhan4.mp3","adhan5.mp3"],madinah:["adhan_madinah1.mp3","adhan_madinah2.mp3","adhan_fajr_madinah.mp3"],makkah:["adhan_makkah1.mp3","adhan_makkah2.mp3","adhan_fajr_makkah.mp3"],islamcan:Array.from({length:21},((e,t)=>`azan${t+1}.mp3`))};return Promise.resolve(t[e]||[])}async stopAzan(){if(console.log("Stopping Adhan..."),this.audio)try{return this.isPlaying=!1,this.isLoading=!1,this.audio.pause(),this.audio.currentTime=0,this.cleanupAudio(),this.resetButtonStates(),console.log("⏹️ Audio playback stopped"),!0}catch(e){return console.error("Error stopping audio:",e),this.isPlaying=!1,this.isLoading=!1,!1}return!0}cleanupAudio(){if(this.audio)try{this.audio.oncanplaythrough=null,this.audio.onerror=null,this.audio.onended=null,this.audio.pause(),this.audio.currentTime=0,this.audio.src="",this.audio=null}catch(e){console.error("Error cleaning up audio:",e)}finally{this.isPlaying=!1,this.isLoading=!1}}formatQariName(e){const t={"islamcan-18":"IslamCan (18 Qaris)",islamcan:"IslamCan",Local:"Local Adhan",madina:"Madinah",madinah:"Madinah",makkah:"Makkah",default:"Default"};return t[e]?t[e]:e.split("-").map((e=>e.charAt(0).toUpperCase()+e.slice(1))).join(" ")}async scanAvailableQaris(){try{const e=["abdul-basit","al-ghamdi","al-hussary","al-minshawi","assabile","default","islamcan","Local","madina","madinah","makkah","mishary-rashid","muaiqly"];return this.availableQaris=e,this.updateQariSelectors(),console.log("✅ Available Qaris:",this.availableQaris),this.availableQaris}catch(e){return console.error("Error scanning Qaris:",e),this.availableQaris=["default"],this.updateQariSelectors(),this.availableQaris}}updateQariSelectors(){["tahajjud","suhoor","fajr","ishraq","dhuhr","asr","maghrib","isha"].forEach((e=>{const t=document.getElementById(`${e}QariSelect`);if(t){const a=t.value;t.innerHTML="",this.availableQaris.forEach((e=>{const a=document.createElement("option");a.value=e,a.textContent=this.formatQariName(e),t.appendChild(a)}));const o=localStorage.getItem(`${e}Qari`)||a||"default";this.availableQaris.includes(o)?t.value=o:t.value="default";const i=new Event("change");t.dispatchEvent(i)}}))}async playAzan(e){if(this.isPlaying||this.isLoading)console.log("Already playing or loading audio");else try{this.isLoading=!0;const t=document.getElementById(`${e}QariSelect`);if(!t)return console.warn(`Failed to load audio for ${e}, trying default`),this.loadDefaultAdhan(e);const a=t.value||"default",o=localStorage.getItem(`${e}AudioFile_${a}`)||"adhan.mp3";let i;if(console.log(`Playing Adhan for ${e} using qari ${a}, file: ${o}`),this.updateButtonStates(e),await this.stopAzan(),this.audio=new Audio,this.audio.oncanplaythrough=()=>{console.log("✅ Audio loaded successfully"),this.isLoading=!1,this.isPlaying=!0,this.audio.play().catch((e=>{console.error("Error playing audio:",e),this.isPlaying=!1,this.isLoading=!1,this.resetButtonStates()}))},this.audio.onerror=t=>{console.error("❌ Error loading audio:",t),this.isLoading=!1,this.isPlaying=!1,console.log("Failed to load audio for",e,"trying default"),this.loadDefaultAdhan(e)},this.audio.onended=()=>{console.log("✅ Audio playback completed"),this.isPlaying=!1,this.resetButtonStates()},"Local"===a)i=`${this.baseUrl}/adhans/Local/${o}`;else{const e=a.toLowerCase().replace(/-/g,"_");i=`${this.baseUrl}/adhans/${e}/${o}`}return console.log("Loading audio from path:",i),this.audio.src=i,!0}catch(e){return console.error("Error playing Adhan:",e),this.isPlaying=!1,this.isLoading=!1,this.cleanupAudio(),this.resetButtonStates(),!1}}async loadDefaultAdhan(e){console.log("Falling back to default Adhan...");try{const t=`${this.baseUrl}/adhans/default/adhan.mp3`;return console.log("Loading default Adhan from:",t),this.audio||(this.audio=new Audio,this.audio.oncanplaythrough=()=>{console.log("✅ Default Adhan loaded successfully"),this.isLoading=!1,this.isPlaying=!0,this.audio.play().catch((e=>{console.error("Error playing default Adhan:",e),this.isPlaying=!1,this.isLoading=!1,this.resetButtonStates()}))},this.audio.onerror=e=>{console.error("❌ Error loading default Adhan:",e),this.isLoading=!1,this.isPlaying=!1,this.resetButtonStates()},this.audio.onended=()=>{console.log("✅ Default Adhan playback completed"),this.isPlaying=!1,this.resetButtonStates()}),this.updateButtonStates(e),this.audio.src=t,!0}catch(e){return console.error("Error loading default Adhan:",e),this.isPlaying=!1,this.isLoading=!1,this.resetButtonStates(),!1}}setupAudioEventListeners(e){this.audio&&(this.audio.oncanplaythrough=null,this.audio.onerror=null,this.audio.onended=null,this.audio.oncanplaythrough=()=>{console.log("✅ Audio loaded successfully"),this.isLoading=!1,this.isPlaying=!0,this.audio.play().catch((e=>{console.error("Error playing audio:",e),this.isPlaying=!1,this.isLoading=!1,this.resetButtonStates()}))},this.audio.onerror=t=>{console.error("❌ Error loading audio:",t),this.isLoading=!1,this.isPlaying=!1,this.loadDefaultAdhan(e)},this.audio.onended=()=>{console.log("✅ Audio playback completed"),this.isPlaying=!1,this.resetButtonStates()})}playBeep(){const e=new(window.AudioContext||window.webkitAudioContext),t=e.createOscillator(),a=e.createGain();t.connect(a),a.connect(e.destination),t.type="sine",t.frequency.value=440,a.gain.value=.1,t.start(),setTimeout((()=>{t.stop(),e.close()}),500)}setDefaultQari(e){this.currentQari=e,localStorage.setItem("defaultQari",e)}async requestNotificationPermission(){try{return"granted"===await Notification.requestPermission()}catch(e){return console.error("❌ Error requesting notification permission:",e),!1}}updateButtonStates(e){const t=document.querySelector(`.prayer-card[data-prayer="${e}"]`);if(t){const e=t.querySelector(".play-adhan"),a=t.querySelector(".stop-adhan");e&&(e.disabled=!0),a&&(a.disabled=!1)}document.querySelectorAll(".prayer-card").forEach((t=>{if(t.dataset.prayer!==e){const e=t.querySelector(".play-adhan");e&&(e.disabled=!0)}}))}resetButtonStates(){document.querySelectorAll(".play-adhan").forEach((e=>{e.disabled=!1})),document.querySelectorAll(".stop-adhan").forEach((e=>{e.disabled=!0}))}async showFileSelector(e){const t=document.getElementById(`${e}Modal`);if(!t)return void console.error(`Modal for ${e} not found`);const a=t.querySelector(".qari-list"),o=t.querySelector(".file-list");a.innerHTML='<div class="loading">Loading Qaris...</div>',o.innerHTML="";try{a.innerHTML="",this.availableQaris.forEach((t=>{const i=document.createElement("button");i.className="qari-button",i.textContent=this.formatQariName(t),i.dataset.qari=t,i.onclick=async()=>{a.querySelectorAll(".qari-button").forEach((e=>{e.classList.remove("active")})),i.classList.add("active"),await this.loadQariFiles(e,t,o)},a.appendChild(i)})),t.style.display="block";const i=localStorage.getItem(`${e}Qari`)||"default",n=a.querySelector(`[data-qari="${i}"]`);n?n.click():a.firstChild&&a.firstChild.click()}catch(e){console.error("Error showing file selector:",e),a.innerHTML='<div class="error">Error loading Qaris</div>'}}async loadQariFiles(e,t,a){try{if(a.innerHTML='<div class="loading">Loading files...</div>',this.islamcanFiles||(this.islamcanFiles=Array.from({length:21},((e,t)=>`azan${t+1}.mp3`))),"islamcan"===t)return a.innerHTML="",void this.islamcanFiles.forEach((o=>{const i=this.createFileButton(e,t,o,!0);a.appendChild(i)}));if("zub165.github.io"===window.location.hostname){const o=await this.getStaticFileList(t);if(a.innerHTML="",0===o.length){const e=document.createElement("div");return e.className="no-files",e.textContent="No audio files found",void a.appendChild(e)}return void o.forEach((o=>{const i=this.createFileButton(e,t,o,!0);a.appendChild(i)}))}try{const o=await fetch(`http://localhost:3001/adhans/${t}/list`);if(!o.ok)throw new Error(`Failed to load files for ${t}`);const i=await o.json();a.innerHTML="";const n=this.createFileButton(e,t,"adhan",!0);if(a.appendChild(n),0===i.length){const e=document.createElement("div");return e.className="no-files",e.textContent="No additional audio files found",void a.appendChild(e)}i.forEach((o=>{if(o&&"object"==typeof o){const i=this.createFileButton(e,t,o.name||"unknown",o.local||!1,o.url||"",o.needsDownload||!1);a.appendChild(i)}}))}catch(o){console.error("Error fetching from server, falling back to static list:",o);const i=await this.getStaticFileList(t);a.innerHTML="",i.forEach((o=>{const i=this.createFileButton(e,t,o,!0);a.appendChild(i)}))}}catch(e){console.error("Error loading files:",e),a.innerHTML='<div class="error">Error loading files</div>'}}createFileButton(e,t,a,o=!0,i="",n=!1){a||(console.error("Missing fileName in createFileButton"),a="unknown");const s=document.createElement("button");return s.className="file-button",s.textContent=a.replace(".mp3","").replace(/_/g," "),n&&(s.classList.add("needs-download"),s.innerHTML+=' <span class="download-icon">⬇️</span>'),s.onclick=async()=>{if(n&&"zub165.github.io"!==window.location.hostname){s.disabled=!0,s.innerHTML='Downloading... <span class="loading-spinner"></span>';try{const e=await fetch(`/adhans/${t}/download/${a}`);if(!e.ok)throw new Error("Download failed");const o=await e.json();if(!o.success)throw new Error("Download failed");s.classList.remove("needs-download"),s.innerHTML=a.replace(".mp3","").replace(/_/g," "),i=o.path,n=!1}catch(e){return console.error("Error downloading file:",e),s.innerHTML="Download Failed ⚠️",void(s.disabled=!1)}}const o=document.getElementById(`${e}QariSelect`);o&&(o.value=t),localStorage.setItem(`${e}Qari`,t),localStorage.setItem(`${e}AudioFile_${t}`,a),i&&localStorage.setItem(`${e}AudioURL_${t}`,i);const r=document.getElementById(`${e}Modal`);r&&(r.style.display="none"),console.log(`Selected ${a} from ${t} for ${e}`)},s}},o=class{constructor(){this.compassElement=document.getElementById("qibla-compass"),this.needleElement=document.getElementById("compass-needle"),this.directionElement=document.getElementById("qibla-direction"),this.coordinates=null,this.qiblaDirection=null,this.isCalibrating=!1,this.hasPermission=!1,this.isSupported="DeviceOrientationEvent"in window,this.orientationHandler=this.handleDeviceOrientation.bind(this),this.hasShownHeadingError=!1}async initialize(e){try{if(!e)throw new Error("Coordinates are required for Qibla compass");return this.coordinates=e,this.qiblaDirection=this.calculateQiblaDirection(e.latitude,e.longitude),console.log("Qibla direction calculated:",this.qiblaDirection),this.updateDirectionDisplay(this.qiblaDirection),await this.requestOrientationPermission(),this.setupEventListeners(),!0}catch(e){return console.error("Error initializing Qibla compass:",e),this.showError("Failed to initialize Qibla compass"),!1}}async requestOrientationPermission(){try{"function"==typeof DeviceOrientationEvent.requestPermission?(this.showCalibrationButton(),document.getElementById("calibrate-compass")?.addEventListener("click",(async()=>{try{if("granted"===await DeviceOrientationEvent.requestPermission()){this.hasPermission=!0,this.startListening(),this.showMessage("Compass access granted!","success");const e=document.getElementById("calibrate-compass");e&&(e.style.display="none")}else this.showError("Permission denied for compass access")}catch(e){console.error("Error requesting orientation permission:",e),this.showError("Failed to get compass permission")}}))):(this.hasPermission=!0,this.startListening())}catch(e){console.error("Error setting up orientation permission:",e),this.showError("Compass access not available")}}showCalibrationButton(){if(!document.getElementById("calibrate-compass")){const e=document.createElement("button");e.id="calibrate-compass",e.className="calibrate-button",e.textContent="Calibrate Compass",e.onclick=()=>this.calibrateCompass(),this.compassElement?this.compassElement.parentNode.insertBefore(e,this.compassElement.nextSibling):document.body.appendChild(e)}}async calibrateCompass(){try{if(this.isCalibrating)return;if(this.isCalibrating=!0,"function"==typeof DeviceOrientationEvent.requestPermission)if("granted"===await DeviceOrientationEvent.requestPermission()){this.hasPermission=!0,this.startListening();const e=document.getElementById("calibrate-compass");e&&(e.style.display="none"),this.showMessage("Compass calibrated successfully")}else this.showError("Permission denied for device orientation");else this.hasPermission=!0,this.startListening()}catch(e){console.error("Error calibrating compass:",e),this.showError("Failed to calibrate compass")}finally{this.isCalibrating=!1}}startListening(){this.isSupported?(window.addEventListener("deviceorientation",this.orientationHandler,!0),window.addEventListener("webkitdeviceorientation",this.orientationHandler,!0),console.log("Started listening for device orientation"),this.showMessage("Move your device around to calibrate the compass","info")):(console.warn("Device orientation not supported"),this.showError("Compass not supported on this device"))}stopListening(){window.removeEventListener("deviceorientation",this.orientationHandler),console.log("Stopped listening for device orientation")}handleDeviceOrientation(e){if(console.log("Device Orientation Event:",{alpha:e.alpha,beta:e.beta,gamma:e.gamma,absolute:e.absolute,webkitCompassHeading:e.webkitCompassHeading,webkitCompassAccuracy:e.webkitCompassAccuracy}),!e.absolute&&void 0===e.webkitCompassHeading)return void(this.hasShownHeadingError||(console.warn("Absolute orientation not available"),this.showMessage("Please enable compass calibration in your device settings","warning"),this.hasShownHeadingError=!0));let t=null;if(void 0!==e.webkitCompassHeading?(t=360-e.webkitCompassHeading,console.log("Using webkitCompassHeading:",t)):null!==e.alpha&&void 0!==e.alpha&&(t=e.alpha,console.log("Using alpha:",t),e.absolute?console.log("Using absolute orientation"):console.log("Using relative orientation")),null==t)return void(this.hasShownHeadingError||(console.warn("No valid heading available"),this.showMessage("Compass heading not available. Please ensure your device has a compass.","warning"),this.hasShownHeadingError=!0));this.hasShownHeadingError=!1;const a=(360-t+this.qiblaDirection)%360;console.log("Calculated rotation:",a),this.needleElement&&(this.needleElement.style.transition="transform 0.3s ease-out",this.needleElement.style.transform=`rotate(${a}deg)`)}calculateQiblaDirection(e,t){try{const a=this.toRadians(e),o=this.toRadians(t),i=this.toRadians(21.4225),n=this.toRadians(39.8262),s=Math.sin(n-o),r=Math.cos(a)*Math.tan(i)-Math.sin(a)*Math.cos(n-o);let l=Math.atan2(s,r);return l=this.toDegrees(l),l=(l+360)%360,l}catch(e){return console.error("Error calculating Qibla direction:",e),0}}updateDirectionDisplay(e){if(this.directionElement){const t=Math.round(e);this.directionElement.textContent=`${t}°`}!this.isSupported&&this.needleElement&&(this.needleElement.style.transform=`rotate(${e}deg)`)}toRadians(e){return e*(Math.PI/180)}toDegrees(e){return e*(180/Math.PI)}showError(e){console.error(e);const t=document.createElement("div");t.className="compass-error",t.textContent=e,this.compassElement&&this.compassElement.appendChild(t)}showMessage(e,t="info"){document.querySelectorAll(`.compass-message.${t}`).forEach((e=>e.remove()));const a=document.createElement("div");switch(a.className=`compass-message ${t}`,a.textContent=e,t){case"warning":a.style.backgroundColor="#fff3cd",a.style.color="#856404";break;case"error":a.style.backgroundColor="#f8d7da",a.style.color="#721c24";break;case"success":a.style.backgroundColor="#d4edda",a.style.color="#155724";break;default:a.style.backgroundColor="#d1ecf1",a.style.color="#0c5460"}this.compassElement&&(this.compassElement.appendChild(a),"success"!==t&&"info"!==t||setTimeout((()=>{a.remove()}),5e3))}setupEventListeners(){document.addEventListener("visibilitychange",(()=>{document.hidden?this.stopListening():this.hasPermission&&this.startListening()}))}},i=class{constructor(){this.themes={light:{name:"Light",icon:"☀️",colors:{"--primary-color":"#4CAF50","--secondary-color":"#2196F3","--background-color":"#ffffff","--card-bg":"#ffffff","--text-primary":"#333333","--text-secondary":"#666666","--border-color":"#e0e0e0","--shadow-color":"rgba(0, 0, 0, 0.1)","--highlight-color":"#4CAF50","--prayer-card-active":"#e8f5e9"}},dark:{name:"Dark",icon:"🌙",colors:{"--primary-color":"#81c784","--secondary-color":"#64b5f6","--background-color":"#121212","--card-bg":"#1e1e1e","--text-primary":"#ffffff","--text-secondary":"#b0b0b0","--border-color":"#333333","--shadow-color":"rgba(0, 0, 0, 0.3)","--highlight-color":"#81c784","--prayer-card-active":"#1b5e20"}},desert:{name:"Desert",icon:"🕌",colors:{"--primary-color":"#d4ac0d","--secondary-color":"#b8860b","--background-color":"#f7e9d7","--card-bg":"#ffffff","--text-primary":"#5d4037","--text-secondary":"#8d6e63","--border-color":"#d7ccc8","--shadow-color":"rgba(93, 64, 55, 0.1)","--highlight-color":"#ffd700","--prayer-card-active":"#fff8e1"}},emerald:{name:"Emerald",icon:"💠",colors:{"--primary-color":"#2e7d32","--secondary-color":"#00796b","--background-color":"#e8f5e9","--card-bg":"#ffffff","--text-primary":"#1b5e20","--text-secondary":"#388e3c","--border-color":"#c8e6c9","--shadow-color":"rgba(46, 125, 50, 0.1)","--highlight-color":"#00c853","--prayer-card-active":"#b9f6ca"}},azure:{name:"Azure",icon:"🌊",colors:{"--primary-color":"#1976d2","--secondary-color":"#0288d1","--background-color":"#e3f2fd","--card-bg":"#ffffff","--text-primary":"#0d47a1","--text-secondary":"#1565c0","--border-color":"#bbdefb","--shadow-color":"rgba(25, 118, 210, 0.1)","--highlight-color":"#2196f3","--prayer-card-active":"#b3e5fc"}},ramadan:{name:"Ramadan",icon:"🌙",colors:{"--primary-color":"#c17900","--secondary-color":"#ff9800","--background-color":"#fff3e0","--card-bg":"#ffffff","--text-primary":"#e65100","--text-secondary":"#f57c00","--border-color":"#ffe0b2","--shadow-color":"rgba(255, 152, 0, 0.1)","--highlight-color":"#ffd54f","--prayer-card-active":"#fff8e1"}},night:{name:"Night",icon:"✨",colors:{"--primary-color":"#5c6bc0","--secondary-color":"#3f51b5","--background-color":"#1a237e","--card-bg":"#283593","--text-primary":"#e8eaf6","--text-secondary":"#c5cae9","--border-color":"#3949ab","--shadow-color":"rgba(92, 107, 192, 0.3)","--highlight-color":"#7986cb","--prayer-card-active":"#303f9f"}},calligraphy:{name:"Calligraphy",icon:"📜",colors:{"--primary-color":"#000000","--secondary-color":"#424242","--background-color":"#f5f5f5","--card-bg":"#ffffff","--text-primary":"#212121","--text-secondary":"#616161","--border-color":"#bdbdbd","--shadow-color":"rgba(0, 0, 0, 0.1)","--highlight-color":"#757575","--prayer-card-active":"#eeeeee"}}}}initialize(){console.log("🎨 Initializing theme manager..."),this.createThemeSelector();const e=localStorage.getItem("theme")||"light";this.applyTheme(e);const t=document.getElementById("theme-toggle-btn");t&&t.addEventListener("click",(()=>{const e="dark"===document.documentElement.getAttribute("data-theme")?"light":"dark";this.applyTheme(e)})),console.log("✅ Theme manager initialized with theme:",e)}createThemeSelector(){const e=document.createElement("div");e.className="theme-panel",e.innerHTML=`\n            <div class="theme-panel-header">\n                <h3>Themes</h3>\n                <button class="theme-panel-toggle">×</button>\n            </div>\n            <div class="theme-grid">\n                ${Object.entries(this.themes).map((([e,t])=>`\n                    <button class="theme-option" data-theme="${e}">\n                        <span class="theme-icon">${t.icon}</span>\n                        <span class="theme-name">${t.name}</span>\n                    </button>\n                `)).join("")}\n            </div>\n        `,document.body.appendChild(e);const t=document.querySelector(".theme-panel-toggle");t?.addEventListener("click",(()=>{e.classList.toggle("collapsed")})),document.querySelectorAll(".theme-option").forEach((e=>{e.addEventListener("click",(e=>{const t=e.currentTarget.dataset.theme;this.applyTheme(t)}))}));const a=document.querySelector("header");if(a){const t=document.createElement("button");t.className="theme-switcher-btn",t.innerHTML="🎨",t.addEventListener("click",(()=>{e.classList.toggle("collapsed")})),a.appendChild(t)}}applyTheme(e){const t=this.themes[e];t&&(Object.entries(t.colors).forEach((([e,t])=>{document.documentElement.style.setProperty(e,t)})),document.querySelectorAll(".theme-option").forEach((t=>{t.classList.toggle("active",t.dataset.theme===e)})),localStorage.setItem("theme",e),document.documentElement.setAttribute("data-theme",e),window.dispatchEvent(new CustomEvent("themechange",{detail:{theme:e}})))}};class n{constructor(){this.prayerCalculation=null,this.adhanPlayer=null,this.themeManager=null,this.locationInfo=document.getElementById("location-info"),this.locationCoords=document.getElementById("location-coords"),this.refreshButton=document.getElementById("refresh-location"),this.qariRefreshButton=document.getElementById("refresh-qari"),this.coordinates=null,this.isUpdating=!1,this.moonPhases=["🌑","🌒","🌓","🌔","🌕","🌖","🌗","🌘"],this.isInitialized=!1}async initialize(){try{return console.log("Initializing application..."),await this.initializeCoreComponents(),await this.initializePrayerCalculation(),this.setupEventListeners(),this.isInitialized=!0,console.log("App initialized successfully"),!0}catch(e){return console.error("Error initializing app:",e),!1}}async initializeCoreComponents(){try{return console.log("Loading Adhan.js library..."),await async function(){return new Promise(((t,a)=>{if(void 0!==window.Adhan)return console.log("✅ Adhan.js already loaded"),void t();const o=document.createElement("script");o.src="https://unpkg.com/adhan@4.4.3/dist/adhan.min.js",o.async=!0,o.onload=()=>{void 0!==window.Adhan?(console.log("✅ Adhan.js loaded successfully"),t()):(console.error("❌ Adhan.js failed to initialize"),e().then(t).catch(a))},o.onerror=async()=>{console.warn("⚠️ Failed to load Adhan.js from CDN. Trying local fallback...");try{await e(),t()}catch(e){a(e)}},document.body.appendChild(o)}))}(),console.log("Adhan.js library loaded successfully"),this.adhanPlayer=new a,console.log("Adhan player initialized"),this.themeManager=new i,this.themeManager.initialize(),console.log("Theme manager initialized"),await this.getUserLocation(),!0}catch(e){return console.error("Error initializing core components:",e),!1}}async initializePrayerCalculation(){try{if("undefined"==typeof Adhan)throw new Error("Adhan.js library not loaded");this.prayerCalculation=new t,this.prayerCalculation.setAdhanPlayer(this.adhanPlayer);const e=await this.prayerCalculation.initialize();return e?console.log("Prayer calculation initialized successfully"):console.error("Failed to initialize prayer calculation"),e}catch(e){return console.error("Error initializing prayer calculation:",e),!1}}async getUserLocation(){try{this.locationInfo&&(this.locationInfo.textContent="Detecting location...",this.locationInfo.classList.add("loading")),document.querySelectorAll(".error-message").forEach((e=>e.remove()));const e=parseFloat(localStorage.getItem("latitude")),t=parseFloat(localStorage.getItem("longitude"));if(!isNaN(e)&&!isNaN(t))return console.log("Using saved location:",{latitude:e,longitude:t}),this.coordinates={latitude:e,longitude:t},this.updateLocationDisplay(this.coordinates),this.coordinates;if(!("geolocation"in navigator))throw new Error("Geolocation is not supported by your browser");console.log("Requesting user location...");try{const e=await new Promise(((e,t)=>{const a={enableHighAccuracy:!0,timeout:15e3,maximumAge:3e5};this.locationInfo&&(this.locationInfo.textContent="Waiting for accurate location...");const o=navigator.geolocation.watchPosition((t=>{t.coords.accuracy<=100&&(navigator.geolocation.clearWatch(o),e(t))}),(e=>{navigator.geolocation.clearWatch(o),t(e)}),a);setTimeout((()=>{navigator.geolocation.getCurrentPosition(e,t,a)}),1e4)})),{latitude:t,longitude:a,accuracy:o}=e.coords;return console.log("Location obtained:",{latitude:t,longitude:a,accuracy:o}),localStorage.setItem("latitude",t.toString()),localStorage.setItem("longitude",a.toString()),this.coordinates={latitude:t,longitude:a},this.updateLocationDisplay(this.coordinates),this.coordinates}catch(e){console.warn("Geolocation error:",e);let t="Unable to get your location. ";switch(e.code){case 1:t+="Please allow location access in your browser settings.";break;case 2:t+="Position unavailable. Please check your device's location settings.";break;case 3:t+="Location request timed out. Please try again.";break;default:t+="Please try again or use manual location input."}return this.showError(t),this.useDefaultLocation()}}catch(e){return console.error("Error getting location:",e),this.showError(e.message||"Failed to get location"),this.useDefaultLocation()}finally{this.locationInfo&&this.locationInfo.classList.remove("loading")}}useDefaultLocation(){return console.log("Using default location (Makkah)"),this.coordinates={latitude:21.4225,longitude:39.8262},this.updateLocationDisplay(this.coordinates,!0),localStorage.setItem("latitude",this.coordinates.latitude.toString()),localStorage.setItem("longitude",this.coordinates.longitude.toString()),this.coordinates}updateLocationDisplay(e,t=!1){this.locationInfo&&(this.locationInfo.textContent=t?"Using default location (Makkah)":"Location detected"),this.locationCoords&&(this.locationCoords.textContent=`${e.latitude.toFixed(4)}°, ${e.longitude.toFixed(4)}°`),this.initializeQiblaCompass(e)}async initializeQiblaCompass(e){try{if(!e)throw new Error("Coordinates required for Qibla compass");console.log("Initializing Qibla compass with coordinates:",e);const t=new o;await t.initialize(e),console.log("Qibla compass initialized successfully")}catch(e){console.error("Error initializing Qibla compass:",e)}}setupEventListeners(){document.addEventListener("visibilitychange",(()=>{!document.hidden&&this.isInitialized&&this.prayerCalculation?.recalculatePrayerTimes()})),this.refreshButton&&this.refreshButton.addEventListener("click",(async()=>{if(!this.isUpdating){this.isUpdating=!0,this.refreshButton.disabled=!0;try{localStorage.removeItem("latitude"),localStorage.removeItem("longitude");const e=await this.getUserLocation();this.prayerCalculation&&e&&await this.prayerCalculation.updateCoordinates(e.latitude,e.longitude)}catch(e){console.error("Error refreshing location:",e),this.showError("Failed to update location. Please try again.")}finally{this.isUpdating=!1,this.refreshButton.disabled=!1}}}))}showError(e){const t=document.createElement("div");t.className="error-message",t.textContent=e,document.querySelectorAll(".error-message").forEach((e=>e.remove())),this.locationInfo?this.locationInfo.parentNode.insertBefore(t,this.locationInfo.nextSibling):document.body.appendChild(t),setTimeout((()=>{t.remove()}),5e3)}}document.addEventListener("DOMContentLoaded",(()=>{(new n).initialize()}))})();
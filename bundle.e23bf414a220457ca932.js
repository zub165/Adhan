(()=>{"use strict";var e,t,a={},o={};function i(e){var t=o[e];if(void 0!==t)return t.exports;var n=o[e]={exports:{}};return a[e](n,n.exports,i),n.exports}i.m=a,i.d=(e,t)=>{for(var a in t)i.o(t,a)&&!i.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},i.f={},i.e=e=>Promise.all(Object.keys(i.f).reduce(((t,a)=>(i.f[a](e,t),t)),[])),i.u=e=>"bundle.4b43f44eb04db7abd89a.js",i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),e={},t="adhan:",i.l=(a,o,n,r)=>{if(e[a])e[a].push(o);else{var s,l;if(void 0!==n)for(var c=document.getElementsByTagName("script"),d=0;d<c.length;d++){var h=c[d];if(h.getAttribute("src")==a||h.getAttribute("data-webpack")==t+n){s=h;break}}s||(l=!0,(s=document.createElement("script")).charset="utf-8",s.timeout=120,i.nc&&s.setAttribute("nonce",i.nc),s.setAttribute("data-webpack",t+n),s.src=a),e[a]=[o];var u=(t,o)=>{s.onerror=s.onload=null,clearTimeout(m);var i=e[a];if(delete e[a],s.parentNode&&s.parentNode.removeChild(s),i&&i.forEach((e=>e(o))),t)return t(o)},m=setTimeout(u.bind(null,void 0,{type:"timeout",target:s}),12e4);s.onerror=u.bind(null,s.onerror),s.onload=u.bind(null,s.onload),l&&document.head.appendChild(s)}},i.p="/Adhan/",(()=>{var e={792:0};i.f.j=(t,a)=>{var o=i.o(e,t)?e[t]:void 0;if(0!==o)if(o)a.push(o[2]);else{var n=new Promise(((a,i)=>o=e[t]=[a,i]));a.push(o[2]=n);var r=i.p+i.u(t),s=new Error;i.l(r,(a=>{if(i.o(e,t)&&(0!==(o=e[t])&&(e[t]=void 0),o)){var n=a&&("load"===a.type?"missing":a.type),r=a&&a.target&&a.target.src;s.message="Loading chunk "+t+" failed.\n("+n+": "+r+")",s.name="ChunkLoadError",s.type=n,s.request=r,o[1](s)}}),"chunk-"+t,t)}};var t=(t,a)=>{var o,n,[r,s,l]=a,c=0;if(r.some((t=>0!==e[t]))){for(o in s)i.o(s,o)&&(i.m[o]=s[o]);l&&l(i)}for(t&&t(a);c<r.length;c++)n=r[c],i.o(e,n)&&e[n]&&e[n][0](),e[n]=0},a=self.webpackChunkadhan=self.webpackChunkadhan||[];a.forEach(t.bind(null,0)),a.push=t.bind(null,a.push.bind(a))})();const n=class{constructor(){this.calculationMethod=localStorage.getItem("calculationMethod")||"ISNA",this.madhab=localStorage.getItem("madhab")||"Shafi",this.coordinates=null,this.prayerTimes=null,this.lastCalculation=null,this.notificationTimeout=null,this.adhanPlayer=null,this.angles={fajr:-18,sunrise:-.833,dhuhr:0,maghrib:-.833,isha:-18},this.dstAdjustment=this.getDSTAdjustment(),document.addEventListener("DOMContentLoaded",(()=>{const e=document.querySelector('select[name="calculationMethod"]');e&&e.addEventListener("change",(e=>{this.calculationMethod=e.target.value,localStorage.setItem("calculationMethod",this.calculationMethod),this.recalculatePrayerTimes()})),document.querySelectorAll('input[name="madhab"]').forEach((e=>{e.addEventListener("change",(e=>{this.madhab=e.target.value,localStorage.setItem("madhab",this.madhab),this.recalculatePrayerTimes()}))}))}))}setAdhanPlayer(e){this.adhanPlayer=e}async initialize(e){try{if(console.log("Initializing prayer calculation module..."),!e)throw new Error("Coordinates are required for initialization");this.loadSettings(),this.coordinates=e,await this.calculatePrayerTimes(e),console.log("✅ Prayer calculation module initialized successfully")}catch(e){throw console.error("❌ Error initializing prayer calculation:",e),e}}loadSettings(){const e=localStorage.getItem("calculationMethod");if(e&&window.Adhan.CalculationMethod[e]){this.calculationMethod=e;const t=document.querySelector('select[name="calculationMethod"]');t&&(t.value=e)}const t=localStorage.getItem("madhab");if(t){this.madhab=t;const e=document.querySelector(`input[name="madhab"][value="${t}"]`);e&&(e.checked=!0)}}toRadians(e){return e*(Math.PI/180)}toDegrees(e){return e*(180/Math.PI)}getSunDeclination(e){const t=e.getDate(),a=e.getMonth()+1,o=e.getFullYear(),i=367*o-Math.floor(7*(o+Math.floor((a+9)/12))/4)+Math.floor(275*a/9)+t-730531.5,n=357.52911+.9856003*i,r=280.46646+.9856474*i+1.915*Math.sin(this.toRadians(n))+.02*Math.sin(this.toRadians(2*n));return 23.439-4e-7*i*Math.sin(this.toRadians(r))}getEquationOfTime(e){const t=e.getDate(),a=e.getMonth()+1,o=e.getFullYear(),i=367*o-Math.floor(7*(o+Math.floor((a+9)/12))/4)+Math.floor(275*a/9)+t-730531.5,n=280.46646+.9856474*i,r=357.52911+.9856003*i,s=(Math.sin(this.toRadians(r)),Math.cos(this.toRadians(r)),n+1.915*Math.sin(this.toRadians(r))+.02*Math.sin(this.toRadians(2*r)));return Math.cos(this.toRadians(r)),Math.cos(this.toRadians(2*r)),4*(n-(s-2.466*Math.sin(this.toRadians(2*s))+.053*Math.sin(this.toRadians(4*s))))}calculatePrayerTime(e,t,a,o){try{const i=this.toRadians(t),n=this.toRadians(this.getSunDeclination(e));let r=o;o!==this.angles.sunrise&&o!==this.angles.maghrib||(r-=.833+.0347*Math.sqrt(this.coordinates.elevation||0));const s=this.toRadians(r);let l=(Math.sin(s)-Math.sin(i)*Math.sin(n))/(Math.cos(i)*Math.cos(n));if(Math.abs(l)>1){if(!(o<0))return console.warn(`Prayer time calculation not valid for this latitude (${t}) and date`),null;l=o>-18?-1:1}const c=this.toDegrees(Math.acos(l));let d=12+(o<0?-c:c)/15-a/15-this.getEquationOfTime(e)/60+-e.getTimezoneOffset()/60;for(;d<0;)d+=24;for(;d>=24;)d-=24;const h=Math.floor(d),u=Math.floor(60*(d-h)),m=Math.floor(60*(60*(d-h)-u)),f=new Date(e);return f.setHours(h,u,m,0),h<6&&e.getHours()>18&&f.setDate(f.getDate()+1),f}catch(e){return console.error("Error in calculatePrayerTime:",e),null}}getDSTAdjustment(){try{const e=new Date((new Date).getFullYear(),0,1).getTimezoneOffset(),t=new Date((new Date).getFullYear(),6,1).getTimezoneOffset();return Math.max(e,t)!==(new Date).getTimezoneOffset()?1:0}catch(e){return console.warn("Error determining DST:",e),0}}calculateAsrTime(e,t,a){try{const o=this.toRadians(t),i=this.toRadians(this.getSunDeclination(e)),n=(this.getEquationOfTime(e),e.getTimezoneOffset(),Math.asin(Math.sin(o)*Math.sin(i)+Math.cos(o)*Math.cos(i))),r="hanafi"===this.madhab.toLowerCase()?2:1,s=Math.atan(1/(r+Math.tan(n))),l=this.toDegrees(Math.PI/2-s);return this.calculatePrayerTime(e,t,a,l)}catch(e){return console.error("Error calculating Asr time:",e),null}}async calculatePrayerTimes(e){try{if(!e)throw new Error("Coordinates are required for prayer calculation");console.log("Calculating prayer times for coordinates:",e);const t=new Date,{latitude:a,longitude:o}=e;this.coordinates=e;try{const a=-t.getTimezoneOffset()/60;console.log("Timezone offset:",a);const o=await this.fetchPrayerTimesFromAPI(e,a);if(o&&Object.keys(o).length>=5)return console.log("Using API prayer times"),this.prayerTimes=o,this.lastCalculation=t,await this.updatePrayerTimesUI(o),o;console.warn("API times incomplete, falling back to calculations")}catch(e){console.warn("Failed to fetch API times, using calculated times:",e)}console.log("Calculating prayer times using astronomical formulas");const i=await this.getCalculationParameters(),n=new window.Adhan.Coordinates(a,o),r=new window.Adhan.DateComponents(t.getFullYear(),t.getMonth()+1,t.getDate()),s=new window.Adhan.PrayerTimes(n,r,i),l=(Intl.DateTimeFormat().resolvedOptions().timeZone,{fajr:s.fajr,sunrise:s.sunrise,dhuhr:s.dhuhr,asr:s.asr,maghrib:s.maghrib,isha:s.isha});return console.log("Calculated prayer times:",{method:this.calculationMethod,madhab:this.madhab,times:Object.fromEntries(Object.entries(l).map((([e,t])=>[e,this.formatTime(t)])))}),this.prayerTimes=l,this.lastCalculation=t,await this.updatePrayerTimesUI(l),l}catch(t){console.error("Error calculating prayer times:",t),this.showError("Failed to calculate prayer times");try{if(window.Adhan){console.log("Attempting to use Adhan library directly as last resort");const{latitude:t,longitude:a}=e,o=new Date,i=new window.Adhan.Coordinates(t,a),n=new window.Adhan.DateComponents(o.getFullYear(),o.getMonth()+1,o.getDate()),r=window.Adhan.CalculationMethod.ISNA(),s=new window.Adhan.PrayerTimes(i,n,r),l={fajr:s.fajr,sunrise:s.sunrise,dhuhr:s.dhuhr,asr:s.asr,maghrib:s.maghrib,isha:s.isha};return await this.updatePrayerTimesUI(l),l}}catch(e){console.error("Even fallback calculation failed:",e)}throw t}}validateAndCombineTimes(e,t){const a={},o=["fajr","sunrise","dhuhr","asr","maghrib","isha"];for(const i of o){const o=e[i],n=t[i];if(!o&&!n){console.warn(`No valid time available for ${i}`);continue}if(!o){a[i]=n;continue}if(!n){a[i]=o;continue}const r=Math.abs(o-n)/6e4;r>15?(console.warn(`Large time difference for ${i}:`,{calculated:this.formatTime(o),api:this.formatTime(n),diffMinutes:r}),a[i]="fajr"===i||"dhuhr"===i||"asr"===i||"maghrib"===i?o<n?o:n:o>n?o:n):a[i]=n}return a}async fetchPrayerTimesFromAPI(e,t){const a=new Date,o=Math.floor(a.getTime()/1e3),i={MuslimWorldLeague:3,ISNA:2,MWL:3,Karachi:1,UAQ:4,Dubai:4,Kuwait:4,Qatar:4,Singapore:5,Egypt:5}[this.calculationMethod]||2,n="hanafi"===this.madhab.toLowerCase()?2:1;try{const t=`https://api.aladhan.com/v1/timings/${o}?latitude=${e.latitude}&longitude=${e.longitude}&method=${i}&school=${n}`;console.log("Fetching prayer times from API:",t);const r=await fetch(t);if(!r.ok)throw new Error(`API request failed: ${r.statusText}`);const s=await r.json();if(!s.data||!s.data.timings)throw new Error("Invalid API response format");const l=s.data.timings,c={};return["Fajr","Sunrise","Dhuhr","Asr","Maghrib","Isha"].forEach((e=>{const t=l[e];if(t)try{const[o,i]=t.split(":").map(Number),n=new Date(a);n.setHours(o,i,0,0);const r=e.toLowerCase();c[r]=n}catch(a){console.error(`Error parsing ${e} time:`,t,a)}else console.warn(`Missing ${e} time in API response`)})),console.log("Prayer times fetched from API:",{original:l,converted:Object.fromEntries(Object.entries(c).map((([e,t])=>[e,this.formatTime(t)])))}),c}catch(e){return console.error("Error fetching prayer times from API:",e),null}}async getCalculationParameters(){if(void 0===window.Adhan)throw new Error("Adhan library not available for parameters");window.Adhan.CalculationMethod[this.calculationMethod]||(console.warn(`Invalid calculation method: ${this.calculationMethod}, using default`),this.calculationMethod="MuslimWorldLeague"),console.log(`Using calculation method: ${this.calculationMethod}`);const e=window.Adhan.CalculationMethod[this.calculationMethod]();e.madhab="hanafi"===this.madhab.toLowerCase()?window.Adhan.Madhab.Hanafi:window.Adhan.Madhab.Shafi;const{getDSTAdjustment:t}=await i.e(654).then(i.bind(i,654)),a=t();return a&&(e.adjustments||(e.adjustments={}),["fajr","sunrise","dhuhr","asr","maghrib","isha"].forEach((t=>{e.adjustments[t]=(e.adjustments[t]||0)+60*a}))),console.log("Calculation parameters:",{method:this.calculationMethod,madhab:this.madhab,fajrAngle:e.fajrAngle,ishaAngle:e.ishaAngle,ishaInterval:e.ishaInterval,adjustments:e.adjustments,dstAdjustment:a}),e}async recalculatePrayerTimes(){this.coordinates&&await this.calculatePrayerTimes(this.coordinates)}async updatePrayerTimesUI(e){if(!e)return void console.error("No prayer times to update UI");const t={fajr:"fajr",dhuhr:"dhuhr",asr:"asr",maghrib:"maghrib",isha:"isha"},a=this.calculateAdditionalTimes(e);console.log("All prayer times:",{standard:Object.fromEntries(Object.entries(e).map((([e,t])=>[e,this.formatTime(t)]))),additional:Object.fromEntries(Object.entries(a).map((([e,t])=>[e,this.formatTime(t)])))});for(const[a,o]of Object.entries(t)){const t=e[a];if(t){const e=this.formatTime(t),a=document.querySelector(`.prayer-card[data-prayer="${o}"] .prayer-time`);a?(a.textContent=e,console.log(`Updated ${o} time to ${e}`)):console.warn(`Element for ${o} not found`)}else console.warn(`No time available for ${a}`)}const o={tahajjud:"tahajjud",suhoor:"suhoor",ishraq:"ishraq"};for(const[e,t]of Object.entries(o)){const o=a[e];if(o){const e=this.formatTime(o),a=document.querySelector(`.prayer-card[data-prayer="${t}"] .prayer-time`);a?(a.textContent=e,console.log(`Updated ${t} time to ${e}`)):console.warn(`Element for ${t} not found`)}else console.warn(`No additional time available for ${e}`)}this.updateNextPrayer(e,a),this.scheduleNextPrayerNotification(e,a)}calculateAdditionalTimes(e){if(!e||!e.fajr||!e.maghrib)return console.warn("Missing required prayer times for additional calculations"),this.getDefaultAdditionalTimes();const t={};try{new Date;const a=new Date(e.fajr),o=new Date(e.maghrib);if(isNaN(a.getTime())||isNaN(o.getTime()))throw new Error("Invalid prayer time dates");let i=new Date(o),n=new Date(a);a.getHours()<o.getHours()&&(n=new Date(a),n.setDate(n.getDate()+1));const r=n-i;if(r<=0)throw new Error("Invalid night duration calculation");const s=new Date(i.getTime()+2*r/3);t.tahajjud=s;const l=new Date(a);if(l.setMinutes(l.getMinutes()-10),t.suhoor=l,e.sunrise){const a=new Date(e.sunrise);if(!isNaN(a.getTime())){const e=new Date(a);e.setMinutes(e.getMinutes()+20),t.ishraq=e}}return console.log("Additional prayer times calculated:",{tahajjud:this.formatTime(t.tahajjud),suhoor:this.formatTime(t.suhoor),ishraq:t.ishraq?this.formatTime(t.ishraq):"N/A"}),t}catch(e){return console.error("Error calculating additional prayer times:",e),this.getDefaultAdditionalTimes()}}getDefaultAdditionalTimes(){console.log("Using default additional prayer times");const e={},t=new Date,a=new Date(t);a.setHours(3,0,0,0),e.tahajjud=a;const o=new Date(t);o.setHours(4,30,0,0),e.suhoor=o;const i=new Date(t);return i.setHours(7,0,0,0),e.ishraq=i,e}formatTime(e){if(!e||!(e instanceof Date)||isNaN(e.getTime()))return console.error("Invalid date for formatting:",e),"--:--";try{return e.toLocaleTimeString("en-US",{hour:"2-digit",minute:"2-digit",hour12:!0})}catch(t){console.error("Error formatting time:",t);const a=e.getHours(),o=e.getMinutes();return`${a%12||12}:${o<10?`0${o}`:o} ${a>=12?"PM":"AM"}`}}updateNextPrayer(e,t){const a=new Date,o={...e,...t},i=["tahajjud","suhoor","fajr","sunrise","ishraq","dhuhr","asr","maghrib","isha"];let n=null,r=null;for(const e of i){const t=o[e];if(t&&t>a){n=e,r=t;break}}if(!n){n="tahajjud";const e=new Date(t.tahajjud);e.setDate(e.getDate()+1),r=e}document.querySelectorAll(".prayer-card").forEach((e=>{e.classList.remove("active","next-prayer")}));const s=document.querySelector(`.prayer-card[data-prayer="${n}"]`);if(s){s.classList.add("active","next-prayer");const e=s.querySelector(".countdown");e&&(this.updateCountdown(e,r),this.countdownInterval&&clearInterval(this.countdownInterval),this.countdownInterval=setInterval((()=>{this.updateCountdown(e,r)}),6e4))}}scheduleNextPrayerNotification(e,t){this.notificationTimeout&&clearTimeout(this.notificationTimeout);const a=new Date,o={...e,...t},i=["tahajjud","suhoor","fajr","sunrise","ishraq","dhuhr","asr","maghrib","isha"];let n=null,r=null;for(const e of i){const t=o[e];if(t&&t>a){n=e,r=t;break}}if(!n){n="tahajjud";const e=new Date(t.tahajjud);e.setDate(e.getDate()+1),r=e}const s=r.getTime()-a.getTime();this.notificationTimeout=setTimeout((()=>{this.showPrayerNotification(n),this.scheduleNextPrayerNotification(e,t)}),s),console.log(`Next prayer: ${n} at ${this.formatTime(r)} (in ${Math.round(s/6e4)} minutes)`)}async showPrayerNotification(e){if("sunrise"!==e)try{const t={tahajjud:"Tahajjud",suhoor:"Suhoor Ends",fajr:"Fajr",ishraq:"Ishraq",dhuhr:"Dhuhr",asr:"Asr",maghrib:"Maghrib",isha:"Isha"}[e]||e.charAt(0).toUpperCase()+e.slice(1);"granted"===Notification.permission&&(new Notification(`Time for ${t}`,{body:"suhoor"===e?"Suhoor time is ending soon":`It's time for ${t} prayer`,icon:"/icons/mosque.png",silent:!0}),this.adhanPlayer&&await this.adhanPlayer.playAzan(e))}catch(e){console.error("Error showing notification:",e)}}showError(e){console.error(e);const t=document.createElement("div");t.className="error",t.textContent=e,document.body.appendChild(t),setTimeout((()=>t.remove()),5e3)}updateCountdown(e,t){if(!e||!t)return;const a=t-new Date;if(a<=0)return void(e.textContent="Now");const o=Math.floor(a/36e5),i=Math.floor(a%36e5/6e4);let n="";o>0&&(n+=`${o} hour${o>1?"s":""} `),n+=`${i} minute${1!==i?"s":""}`,e.textContent=`In ${n}`}},r=class{constructor(){this.availableQaris=["Local","abdul-basit","al-hussary","al-minshawi","al-ghamdi","mishary-rashid","madinah","makkah","islamcan"],this.currentQari=localStorage.getItem("defaultQari")||"Local",this.baseUrl=window.location.hostname.includes("github.io")?"/Adhan":"",this.audio=null,this.isPlaying=!1,this.isLoading=!1,"loading"===document.readyState?document.addEventListener("DOMContentLoaded",(()=>this.initializeQariSelectors())):this.initializeQariSelectors()}initializeQariSelectors(){["tahajjud","suhoor","fajr","ishraq","dhuhr","asr","maghrib","isha"].forEach((e=>{const t=document.querySelector(`.prayer-card[data-prayer="${e}"]`);if(t){let a=t.querySelector(".qari-select-container");if(!a){a=document.createElement("div"),a.className="qari-select-container";const o=document.createElement("label");o.textContent="Select Qari: ",o.htmlFor=`${e}QariSelect`,a.appendChild(o);const i=document.createElement("select");i.id=`${e}QariSelect`,i.className="qari-select",a.appendChild(i);const n=t.querySelector(".adhan-controls");n?n.parentNode.insertBefore(a,n):t.appendChild(a)}let o=t.querySelector(".browse-button");o||(o=document.createElement("button"),o.textContent="Browse Files",o.className="browse-button",o.onclick=()=>this.showFileSelector(e),a.appendChild(o));let i=document.getElementById(`${e}Modal`);i||(i=document.createElement("div"),i.id=`${e}Modal`,i.className="file-selector-modal",i.style.display="none",i.innerHTML='\n                        <div class="modal-content">\n                            <div class="modal-header">\n                                <h3>Select Adhan File</h3>\n                                <button class="close-modal">&times;</button>\n                            </div>\n                            <div class="modal-body">\n                                <div class="file-browser">\n                                    <div class="qari-list"></div>\n                                    <div class="file-list"></div>\n                                </div>\n                            </div>\n                        </div>\n                    ',document.body.appendChild(i),i.querySelector(".close-modal").onclick=()=>{i.style.display="none"},window.onclick=e=>{e.target===i&&(i.style.display="none")});const n=document.getElementById(`${e}QariSelect`);if(n){const t=n.cloneNode(!0);n.parentNode.replaceChild(t,n),t.addEventListener("change",(async t=>{const a=t.target.value;localStorage.setItem(`${e}Qari`,a),console.log(`Selected Qari for ${e}: ${a}`)}))}const r=t.querySelector(".play-adhan"),s=t.querySelector(".stop-adhan");if(r){const t=r.cloneNode(!0);r.parentNode.replaceChild(t,r),t.addEventListener("click",(async()=>{this.isPlaying||(t.disabled=!0,s&&(s.disabled=!1),await this.playAzan(e))}))}if(s){const e=s.cloneNode(!0);s.parentNode.replaceChild(e,s),e.addEventListener("click",(async()=>{this.isPlaying&&(await this.stopAzan(),r&&(r.disabled=!1),e.disabled=!0)}))}}})),this.scanAvailableQaris()}async updateFileList(e,t){const a=document.getElementById(`${e}Modal`).querySelector(".file-list");if(a)try{a.innerHTML="";const o=document.createElement("option");o.value="adhan.mp3",o.textContent="Default Adhan",a.appendChild(o);const i=await this.getStaticFileList(t);i.forEach((e=>{const t=document.createElement("option");t.value=e,t.textContent=e.replace(".mp3","").replace(/_/g," "),a.appendChild(t)}));const n=localStorage.getItem(`${e}AudioFile_${t}`);n&&i.includes(n)&&(a.value=n),a.addEventListener("change",(a=>{localStorage.setItem(`${e}AudioFile_${t}`,a.target.value)}))}catch(e){console.error("Error loading audio files:",e)}}getStaticFileList(e){const t={Local:["adhan.mp3","azan.mp3","azan2.mp3","default-azan.mp3","default-azanfajr.mp3"],"abdul-basit":["adhan_masr.mp3","adhan_makkah.mp3","adhan_fajr_masr.mp3"],"al-hussary":["adhan_cairo.mp3","adhan_fajr.mp3"],"al-minshawi":["adhan1.mp3","adhan2.mp3","adhan3.mp3","adhan4.mp3","adhan5.mp3"],madinah:["adhan_madinah1.mp3","adhan_madinah2.mp3","adhan_fajr_madinah.mp3"],makkah:["adhan_makkah1.mp3","adhan_makkah2.mp3","adhan_fajr_makkah.mp3"],islamcan:Array.from({length:21},((e,t)=>`azan${t+1}.mp3`))};return Promise.resolve(t[e]||[])}async stopAzan(){if(console.log("Stopping Adhan..."),this.audio)try{return this.isPlaying=!1,this.isLoading=!1,this.audio.pause(),this.audio.currentTime=0,this.cleanupAudio(),this.resetButtonStates(),console.log("⏹️ Audio playback stopped"),!0}catch(e){return console.error("Error stopping audio:",e),this.isPlaying=!1,this.isLoading=!1,!1}return!0}cleanupAudio(){if(this.audio)try{this.audio.oncanplaythrough=null,this.audio.onerror=null,this.audio.onended=null,this.audio.pause(),this.audio.currentTime=0,this.audio.src="",this.audio=null}catch(e){console.error("Error cleaning up audio:",e)}finally{this.isPlaying=!1,this.isLoading=!1}}formatQariName(e){const t={"islamcan-18":"IslamCan (18 Qaris)",islamcan:"IslamCan",Local:"Local Adhan",madina:"Madinah",madinah:"Madinah",makkah:"Makkah",default:"Default"};return t[e]?t[e]:e.split("-").map((e=>e.charAt(0).toUpperCase()+e.slice(1))).join(" ")}async scanAvailableQaris(){try{const e=["abdul-basit","al-ghamdi","al-hussary","al-minshawi","assabile","default","islamcan","Local","madina","madinah","makkah","mishary-rashid","muaiqly"];return this.availableQaris=e,this.updateQariSelectors(),console.log("✅ Available Qaris:",this.availableQaris),this.availableQaris}catch(e){return console.error("Error scanning Qaris:",e),this.availableQaris=["default"],this.updateQariSelectors(),this.availableQaris}}updateQariSelectors(){["tahajjud","suhoor","fajr","ishraq","dhuhr","asr","maghrib","isha"].forEach((e=>{const t=document.getElementById(`${e}QariSelect`);if(t){const a=t.value;t.innerHTML="",this.availableQaris.forEach((e=>{const a=document.createElement("option");a.value=e,a.textContent=this.formatQariName(e),t.appendChild(a)}));const o=localStorage.getItem(`${e}Qari`)||a||"default";this.availableQaris.includes(o)?t.value=o:t.value="default";const i=new Event("change");t.dispatchEvent(i)}}))}async playAzan(e){if(!this.isPlaying&&!this.isLoading)try{this.isLoading=!0;const t=document.getElementById(`${e}QariSelect`);if(!t)throw new Error(`Qari select element not found for ${e}`);const a=t.value||"default",o=localStorage.getItem(`${e}AudioFile_${a}`)||"adhan.mp3";console.log(`Playing Adhan for ${e} using qari ${a}, file: ${o}`),this.updateButtonStates(e),await this.loadAudio(e,o,a)||(console.warn(`Failed to load audio for ${e}, trying default`),await this.loadDefaultAdhan(e))}catch(e){console.error("Error playing Adhan:",e),this.isPlaying=!1,this.isLoading=!1,this.cleanupAudio(),this.resetButtonStates()}}setupAudioEventListeners(e){this.audio&&(this.audio.oncanplaythrough=()=>{console.log("✅ Audio loaded successfully"),this.isLoading=!1,this.isPlaying=!0,this.audio.play()},this.audio.onerror=t=>{console.error("❌ Error loading audio:",t),this.isLoading=!1,this.isPlaying=!1,this.loadDefaultAdhan(e)},this.audio.onended=()=>{console.log("✅ Audio playback completed"),this.isPlaying=!1,this.resetButtonStates()})}playBeep(){const e=new(window.AudioContext||window.webkitAudioContext),t=e.createOscillator(),a=e.createGain();t.connect(a),a.connect(e.destination),t.type="sine",t.frequency.value=440,a.gain.value=.1,t.start(),setTimeout((()=>{t.stop(),e.close()}),500)}setDefaultQari(e){this.currentQari=e,localStorage.setItem("defaultQari",e)}async requestNotificationPermission(){try{return"granted"===await Notification.requestPermission()}catch(e){return console.error("❌ Error requesting notification permission:",e),!1}}updateButtonStates(e){const t=document.querySelector(`.prayer-card[data-prayer="${e}"]`);if(t){const e=t.querySelector(".play-adhan"),a=t.querySelector(".stop-adhan");e&&(e.disabled=!0),a&&(a.disabled=!1)}document.querySelectorAll(".prayer-card").forEach((t=>{if(t.dataset.prayer!==e){const e=t.querySelector(".play-adhan");e&&(e.disabled=!0)}}))}resetButtonStates(){document.querySelectorAll(".play-adhan").forEach((e=>{e.disabled=!1})),document.querySelectorAll(".stop-adhan").forEach((e=>{e.disabled=!0}))}async showFileSelector(e){const t=document.getElementById(`${e}Modal`);if(!t)return void console.error(`Modal for ${e} not found`);const a=t.querySelector(".qari-list"),o=t.querySelector(".file-list");a.innerHTML='<div class="loading">Loading Qaris...</div>',o.innerHTML="";try{a.innerHTML="",this.availableQaris.forEach((t=>{const i=document.createElement("button");i.className="qari-button",i.textContent=this.formatQariName(t),i.dataset.qari=t,i.onclick=async()=>{a.querySelectorAll(".qari-button").forEach((e=>{e.classList.remove("active")})),i.classList.add("active"),await this.loadQariFiles(e,t,o)},a.appendChild(i)})),t.style.display="block";const i=localStorage.getItem(`${e}Qari`)||"default",n=a.querySelector(`[data-qari="${i}"]`);n?n.click():a.firstChild&&a.firstChild.click()}catch(e){console.error("Error showing file selector:",e),a.innerHTML='<div class="error">Error loading Qaris</div>'}}async loadQariFiles(e,t,a){try{if(a.innerHTML='<div class="loading">Loading files...</div>',this.islamcanFiles||(this.islamcanFiles=Array.from({length:21},((e,t)=>`azan${t+1}.mp3`))),"islamcan"===t)return a.innerHTML="",void this.islamcanFiles.forEach((o=>{const i=this.createFileButton(e,t,o,!0);a.appendChild(i)}));if("zub165.github.io"===window.location.hostname){const o=await this.getStaticFileList(t);if(a.innerHTML="",0===o.length){const e=document.createElement("div");return e.className="no-files",e.textContent="No audio files found",void a.appendChild(e)}return void o.forEach((o=>{const i=this.createFileButton(e,t,o,!0);a.appendChild(i)}))}try{const o=await fetch(`http://localhost:3001/adhans/${t}/list`);if(!o.ok)throw new Error(`Failed to load files for ${t}`);const i=await o.json();a.innerHTML="";const n=this.createFileButton(e,t,"adhan",!0);if(a.appendChild(n),0===i.length){const e=document.createElement("div");return e.className="no-files",e.textContent="No additional audio files found",void a.appendChild(e)}i.forEach((o=>{if(o&&"object"==typeof o){const i=this.createFileButton(e,t,o.name||"unknown",o.local||!1,o.url||"",o.needsDownload||!1);a.appendChild(i)}}))}catch(o){console.error("Error fetching from server, falling back to static list:",o);const i=await this.getStaticFileList(t);a.innerHTML="",i.forEach((o=>{const i=this.createFileButton(e,t,o,!0);a.appendChild(i)}))}}catch(e){console.error("Error loading files:",e),a.innerHTML='<div class="error">Error loading files</div>'}}createFileButton(e,t,a,o=!0,i="",n=!1){a||(console.error("Missing fileName in createFileButton"),a="unknown");const r=document.createElement("button");return r.className="file-button",r.textContent=a.replace(".mp3","").replace(/_/g," "),n&&(r.classList.add("needs-download"),r.innerHTML+=' <span class="download-icon">⬇️</span>'),r.onclick=async()=>{if(n&&"zub165.github.io"!==window.location.hostname){r.disabled=!0,r.innerHTML='Downloading... <span class="loading-spinner"></span>';try{const e=await fetch(`/adhans/${t}/download/${a}`);if(!e.ok)throw new Error("Download failed");const o=await e.json();if(!o.success)throw new Error("Download failed");r.classList.remove("needs-download"),r.innerHTML=a.replace(".mp3","").replace(/_/g," "),i=o.path,n=!1}catch(e){return console.error("Error downloading file:",e),r.innerHTML="Download Failed ⚠️",void(r.disabled=!1)}}const o=document.getElementById(`${e}QariSelect`);o&&(o.value=t),localStorage.setItem(`${e}Qari`,t),localStorage.setItem(`${e}AudioFile_${t}`,a),i&&localStorage.setItem(`${e}AudioURL_${t}`,i);const s=document.getElementById(`${e}Modal`);s&&(s.style.display="none"),console.log(`Selected ${a} from ${t} for ${e}`)},r}async loadAudio(e,t,a){try{if(console.log("Loading audio:",t,"for prayer:",e,"from qari:",a),this.isLoading||this.isPlaying)return console.log("Already playing or loading audio"),!1;let o;if(this.isLoading=!0,await this.stopAzan(),this.audio=new Audio,"Local"===a)o=`${this.baseUrl}/adhans/Local/${t}`;else{const e=a.toLowerCase().replace("-","_");o=`${this.baseUrl}/adhans/${e}/${t}`}console.log("Loading audio from path:",o),this.setupAudioEventListeners(e),this.audio.src=o;const i=i=>{if(console.error(`Error loading audio from ${o}:`,i),o.includes("/dist/"))this.loadDefaultAdhan(e);else{const e=`${this.baseUrl}/dist/adhans/${a.toLowerCase()}/${t}`;console.log("Trying alternative path:",e),this.audio.src=e}};return this.audio.addEventListener("error",i,{once:!0}),await this.audio.load(),!0}catch(e){return console.error("Error in loadAudio:",e),this.isLoading=!1,this.isPlaying=!1,!1}}async loadDefaultAdhan(e){console.log("Falling back to default Adhan...");try{const e=`${this.baseUrl}/adhans/default/adhan.mp3`;this.audio||(this.audio=new Audio),this.audio.src=e,await this.audio.play(),this.isPlaying=!0}catch(e){console.error("Error loading default Adhan:",e),this.isPlaying=!1}}},s=class{constructor(){this.themes={light:{name:"Light",icon:"☀️",colors:{"--primary-color":"#4CAF50","--secondary-color":"#2196F3","--background-color":"#ffffff","--card-bg":"#ffffff","--text-primary":"#333333","--text-secondary":"#666666","--border-color":"#e0e0e0","--shadow-color":"rgba(0, 0, 0, 0.1)","--highlight-color":"#4CAF50","--prayer-card-active":"#e8f5e9"}},dark:{name:"Dark",icon:"🌙",colors:{"--primary-color":"#81c784","--secondary-color":"#64b5f6","--background-color":"#121212","--card-bg":"#1e1e1e","--text-primary":"#ffffff","--text-secondary":"#b0b0b0","--border-color":"#333333","--shadow-color":"rgba(0, 0, 0, 0.3)","--highlight-color":"#81c784","--prayer-card-active":"#1b5e20"}},desert:{name:"Desert",icon:"🕌",colors:{"--primary-color":"#d4ac0d","--secondary-color":"#b8860b","--background-color":"#f7e9d7","--card-bg":"#ffffff","--text-primary":"#5d4037","--text-secondary":"#8d6e63","--border-color":"#d7ccc8","--shadow-color":"rgba(93, 64, 55, 0.1)","--highlight-color":"#ffd700","--prayer-card-active":"#fff8e1"}},emerald:{name:"Emerald",icon:"💠",colors:{"--primary-color":"#2e7d32","--secondary-color":"#00796b","--background-color":"#e8f5e9","--card-bg":"#ffffff","--text-primary":"#1b5e20","--text-secondary":"#388e3c","--border-color":"#c8e6c9","--shadow-color":"rgba(46, 125, 50, 0.1)","--highlight-color":"#00c853","--prayer-card-active":"#b9f6ca"}},azure:{name:"Azure",icon:"🌊",colors:{"--primary-color":"#1976d2","--secondary-color":"#0288d1","--background-color":"#e3f2fd","--card-bg":"#ffffff","--text-primary":"#0d47a1","--text-secondary":"#1565c0","--border-color":"#bbdefb","--shadow-color":"rgba(25, 118, 210, 0.1)","--highlight-color":"#2196f3","--prayer-card-active":"#b3e5fc"}},ramadan:{name:"Ramadan",icon:"🌙",colors:{"--primary-color":"#c17900","--secondary-color":"#ff9800","--background-color":"#fff3e0","--card-bg":"#ffffff","--text-primary":"#e65100","--text-secondary":"#f57c00","--border-color":"#ffe0b2","--shadow-color":"rgba(255, 152, 0, 0.1)","--highlight-color":"#ffd54f","--prayer-card-active":"#fff8e1"}},night:{name:"Night",icon:"✨",colors:{"--primary-color":"#5c6bc0","--secondary-color":"#3f51b5","--background-color":"#1a237e","--card-bg":"#283593","--text-primary":"#e8eaf6","--text-secondary":"#c5cae9","--border-color":"#3949ab","--shadow-color":"rgba(92, 107, 192, 0.3)","--highlight-color":"#7986cb","--prayer-card-active":"#303f9f"}},calligraphy:{name:"Calligraphy",icon:"📜",colors:{"--primary-color":"#000000","--secondary-color":"#424242","--background-color":"#f5f5f5","--card-bg":"#ffffff","--text-primary":"#212121","--text-secondary":"#616161","--border-color":"#bdbdbd","--shadow-color":"rgba(0, 0, 0, 0.1)","--highlight-color":"#757575","--prayer-card-active":"#eeeeee"}}}}initialize(){console.log("🎨 Initializing theme manager..."),this.createThemeSelector();const e=localStorage.getItem("theme")||"light";this.applyTheme(e);const t=document.getElementById("theme-toggle-btn");t&&t.addEventListener("click",(()=>{const e="dark"===document.documentElement.getAttribute("data-theme")?"light":"dark";this.applyTheme(e)})),console.log("✅ Theme manager initialized with theme:",e)}createThemeSelector(){const e=document.createElement("div");e.className="theme-panel",e.innerHTML=`\n            <div class="theme-panel-header">\n                <h3>Themes</h3>\n                <button class="theme-panel-toggle">×</button>\n            </div>\n            <div class="theme-grid">\n                ${Object.entries(this.themes).map((([e,t])=>`\n                    <button class="theme-option" data-theme="${e}">\n                        <span class="theme-icon">${t.icon}</span>\n                        <span class="theme-name">${t.name}</span>\n                    </button>\n                `)).join("")}\n            </div>\n        `,document.body.appendChild(e);const t=document.querySelector(".theme-panel-toggle");t?.addEventListener("click",(()=>{e.classList.toggle("collapsed")})),document.querySelectorAll(".theme-option").forEach((e=>{e.addEventListener("click",(e=>{const t=e.currentTarget.dataset.theme;this.applyTheme(t)}))}));const a=document.querySelector("header");if(a){const t=document.createElement("button");t.className="theme-switcher-btn",t.innerHTML="🎨",t.addEventListener("click",(()=>{e.classList.toggle("collapsed")})),a.appendChild(t)}}applyTheme(e){const t=this.themes[e];t&&(Object.entries(t.colors).forEach((([e,t])=>{document.documentElement.style.setProperty(e,t)})),document.querySelectorAll(".theme-option").forEach((t=>{t.classList.toggle("active",t.dataset.theme===e)})),localStorage.setItem("theme",e),document.documentElement.setAttribute("data-theme",e),window.dispatchEvent(new CustomEvent("themechange",{detail:{theme:e}})))}};async function l(){return new Promise(((e,t)=>{const a=document.createElement("script");a.src="/js/modules/adhan.js",a.type="text/javascript",a.async=!0,a.onload=()=>{void 0!==window.Adhan?(console.log("✅ Local Adhan.js loaded successfully"),e()):(console.error("❌ Local Adhan.js did not initialize properly"),t(new Error("Local Adhan.js did not initialize properly")))},a.onerror=()=>{console.error("❌ Failed to load local Adhan.js"),t(new Error("Failed to load local Adhan.js"))},document.body.appendChild(a)}))}class c{constructor(){this.prayerCalculation=null,this.adhanPlayer=null,this.themeManager=null,this.locationInfo=document.getElementById("location-info"),this.locationCoords=document.getElementById("location-coords"),this.refreshButton=document.getElementById("refresh-location"),this.qariRefreshButton=document.getElementById("refresh-qari"),this.coordinates=null,this.isUpdating=!1,this.moonPhases=["🌑","🌒","🌓","🌔","🌕","🌖","🌗","🌘"]}async initialize(){try{console.log("Initializing theme manager..."),this.themeManager=new s,this.themeManager.initialize(),console.log("✅ Theme manager initialized with theme: light"),console.log("Initializing core components..."),await this.initializeCoreComponents(),console.log("✅ Core components initialized"),await this.initializePrayerCalculation()}catch(e){console.error("Error during app initialization:",e),this.showError("Failed to initialize application. Please refresh the page.")}}async initializeCoreComponents(){await async function(){return new Promise(((e,t)=>{if(void 0!==window.Adhan)return console.log("✅ Adhan.js already loaded"),void e();const a=document.createElement("script");a.src="https://unpkg.com/adhan@4.4.3/dist/adhan.min.js",a.async=!0,a.onload=()=>{void 0!==window.Adhan?(console.log("✅ Adhan.js loaded successfully"),e()):(console.error("❌ Adhan.js failed to initialize"),l().then(e).catch(t))},a.onerror=async()=>{console.warn("⚠️ Failed to load Adhan.js from CDN. Trying local fallback...");try{await l(),e()}catch(e){t(e)}},document.body.appendChild(a)}))}(),this.adhanPlayer=new r,await this.getUserLocation()}async initializePrayerCalculation(){try{if(!this.coordinates)throw new Error("Location coordinates not available");this.prayerCalculation=new n,this.prayerCalculation.setAdhanPlayer(this.adhanPlayer),await this.prayerCalculation.initialize(this.coordinates)}catch(e){throw console.error("Error initializing prayer calculation:",e),e}}async getUserLocation(){try{const e=await this.getCurrentPosition();this.coordinates={latitude:e.coords.latitude,longitude:e.coords.longitude,elevation:e.coords.altitude||0},console.log("✅ Location obtained:",this.coordinates)}catch(e){console.error("Error getting location:",e),this.coordinates={latitude:21.4225,longitude:39.8262,elevation:0},console.log("⚠️ Using default location (Makkah)")}}getCurrentPosition(){return new Promise(((e,t)=>{navigator.geolocation?navigator.geolocation.getCurrentPosition(e,t,{enableHighAccuracy:!0,timeout:5e3,maximumAge:0}):t(new Error("Geolocation is not supported"))}))}showError(e){const t=document.createElement("div");t.className="error-message",t.textContent=e,document.body.appendChild(t)}}document.addEventListener("DOMContentLoaded",(()=>{(new c).initialize()}))})();